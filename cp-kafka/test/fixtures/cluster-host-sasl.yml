---
version: '2'
services:
  zookeeper-sasl-1:
    image: confluentinc/cp-zookeeper:latest
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: sasl.kafka.com:22888:23888;sasl.kafka.com:32888:33888;sasl.kafka.com:42888:43888
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host_zookeeper_1_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host_krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/kafka-cluster-host-test/secrets:/etc/kafka/secrets
    network_mode: host
    labels:
    - io.confluent.docker.testing=true

  zookeeper-sasl-2:
    image: confluentinc/cp-zookeeper:latest
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: sasl.kafka.com:22888:23888;sasl.kafka.com:32888:33888;sasl.kafka.com:42888:43888
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host_zookeeper_2_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host_krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/kafka-cluster-host-test/secrets:/etc/kafka/secrets
    network_mode: host
    labels:
    - io.confluent.docker.testing=true

  zookeeper-sasl-3:
    image: confluentinc/cp-zookeeper:latest
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: sasl.kafka.com:22888:23888;sasl.kafka.com:32888:33888;sasl.kafka.com:42888:43888
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host_zookeeper_3_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host_krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/kafka-cluster-host-test/secrets:/etc/kafka/secrets
    network_mode: host
    labels:
    - io.confluent.docker.testing=true

  kerberos:
    image: confluentinc/cp-kerberos
    network_mode: host
    environment:
      BOOTSTRAP: 0
    volumes:
    - /tmp/kafka-cluster-host-test/secrets:/tmp/keytab
    - /dev/urandom:/dev/random
    labels:
    - io.confluent.docker.testing=true

  kafka-sasl-ssl-1:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    # This is required because Kafka can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: sasl.kafka.com:22181,sasl.kafka.com:32181,sasl.kafka.com:42181/saslssl
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://sasl.kafka.com:19094
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker1_truststore_creds
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host_broker1_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host_krb.conf
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/kafka-cluster-host-test/secrets:/etc/kafka/secrets
    labels:
    - io.confluent.docker.testing=true

  kafka-sasl-ssl-2:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: sasl.kafka.com:22181,sasl.kafka.com:32181,sasl.kafka.com:42181/saslssl
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://sasl.kafka.com:29094
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker2_truststore_creds
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host_broker2_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host_krb.conf
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/kafka-cluster-host-test/secrets:/etc/kafka/secrets
    labels:
    - io.confluent.docker.testing=true

  kafka-sasl-ssl-3:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: sasl.kafka.com:22181,sasl.kafka.com:32181,sasl.kafka.com:42181/saslssl
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://sasl.kafka.com:39094
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker3_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker3_truststore_creds
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host_broker3_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host_krb.conf
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/kafka-cluster-host-test/secrets:/etc/kafka/secrets
    labels:
    - io.confluent.docker.testing=true
