{{/* Define excluded properties */}}
{{- $excludedProps := stringSlice "KAFKA_VERSION" "KAFKA_HEAP_OPTS" "KAFKA_LOG4J_OPTS" "KAFKA_OPTS" "KAFKA_JMX_OPTS" "KAFKA_JVM_PERFORMANCE_OPTS" "KAFKA_GC_LOG_OPTS" "KAFKA_LOG4J_ROOT_LOGLEVEL" "KAFKA_LOG4J_LOGGERS" "KAFKA_TOOLS_LOG4J_LOGLEVEL" "KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET" -}}

{{/* Convert KAFKA_ environment variables to properties */}}
{{- $kafkaProps := envToProps "KAFKA_" "" $excludedProps nil nil -}}
{{ range $name, $value := $kafkaProps }}
{{$name}}={{$value}}
{{ end }}

{{/* Handle special properties that don't fit standard format */}}
{{- $zkClientSocket := getEnv "KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET" "" }}
{{- if ne $zkClientSocket "" }}
zookeeper.clientCnxnSocket={{$zkClientSocket}}
{{ end }}

{{/* Convert CONFLUENT_SUPPORT_ environment variables */}}
{{- $confluentSupportProps := envToProps "CONFLUENT_SUPPORT_" "confluent.support." nil nil nil -}}
{{ range $name, $value := $confluentSupportProps }}
{{$name}}={{$value}}
{{ end }}

{{/* Convert CONFLUENT_METRICS_ environment variables */}}
{{- $confluentMetricProps := envToProps "CONFLUENT_METRICS_" "confluent.metrics." nil nil nil -}}
{{ range $name, $value := $confluentMetricProps }}
{{$name}}={{$value}}
{{ end }}