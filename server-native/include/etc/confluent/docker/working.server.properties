# Basic Kafka Configuration
broker.id=1
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
listeners=PLAINTEXT://broker1:29092,CONTROLLER://broker1:29093,PLAINTEXT_HOST://0.0.0.0:9092,INTERNAL://localhost:9093,EXTERNAL://0.0.0.0:9095
advertised.listeners=PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092,INTERNAL://localhost:9093,EXTERNAL://broker1:9095
controller.listener.names=CONTROLLER
process.roles=broker,controller
controller.quorum.voters=1@broker1:29093
cluster.id=vHCgQyIrRHG8Jv27qI2h3Q

# Replication factors
offsets.topic.replication.factor=1
confluent.license.topic.replication.factor=1
confluent.balancer.topic.replication.factor=1
transaction.state.log.min.isr=1
transaction.state.log.replication.factor=1

# JMX Configuration
jmx.port=9101
jmx.hostname=localhost

# Metrics Configuration
confluent.metrics.reporter.bootstrap.servers=broker1:29092
confluent.metrics.reporter.topic.replicas=1
confluent.metrics.enable=true

# Inter-broker Configuration
inter.broker.listener.name=INTERNAL
super.users=User:admin;User:ANONYMOUS;User:testuser1;User:superuser_client_app
log4j.loggers=kafka.authorizer.logger=INFO
log4j.root.loglevel=INFO
sasl.mechanism.inter.broker.protocol=PLAIN
sasl.enabled.mechanisms=PLAIN,OAUTHBEARER

# Internal Listener SASL Configuration
listener.name.internal.sasl.enabled.mechanisms=PLAIN
listener.name.internal.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret" user_admin="admin-secret" user_mds="mds-secret";

# External Listener OAuth Configuration
listener.name.external.sasl.enabled.mechanisms=OAUTHBEARER
listener.name.external.sasl.oauthbearer.jwks.endpoint.url=http://keycloak:8080/realms/cp/protocol/openid-connect/certs
listener.name.external.sasl.oauthbearer.expected.audience=account
listener.name.external.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required ;
listener.name.external.oauthbearer.sasl.server.callback.handler.class=org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallbackHandler
listener.name.external.principal.builder.class=io.confluent.kafka.security.authenticator.OAuthKafkaPrincipalBuilder
confluent.oauth.groups.claim.name=groups

# Confluent Server Authorizer
authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
confluent.authorizer.access.rule.providers=CONFLUENT,KRAFT_ACL

# MDS Configuration
confluent.metadata.topic.replication.factor=1
confluent.metadata.server.authentication.method=BEARER
confluent.metadata.server.listeners=http://0.0.0.0:8091
confluent.metadata.server.advertised.listeners=http://localhost:8091
confluent.metadata.server.token.key.path=/tmp/conf/keypair.pem
confluent.metadata.server.openapi.enable=true
confluent.metadata.server.user.store=OAUTH
confluent.metadata.server.oauthbearer.jwks.endpoint.url=http://keycloak:8080/realms/cp/protocol/openid-connect/certs
confluent.metadata.server.oauthbearer.expected.issuer=http://localhost:8080/realms/cp
confluent.metadata.server.oauthbearer.expected.audience=account
confluent.metadata.server.oauthbearer.sub.claim.name=sub
confluent.metadata.server.oauthbearer.groups.claim.name=groups

log.dirs=/var/lib/kafka/data
kafka.logs.dir=/var/lib/kafka/data