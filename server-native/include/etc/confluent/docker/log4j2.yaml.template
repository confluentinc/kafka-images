Configuration:
  name: "Log4j2"

  Appenders:
    Console:
      name: STDOUT
      target: SYSTEM_OUT
      PatternLayout:
        Pattern: "[%d] %p %m (%c)%n"

  Loggers:
    Root:
      level: "{{ getEnv "KAFKA_LOG4J_ROOT_LOGLEVEL" "INFO" }}"
      AppenderRef:
        - ref: STDOUT

    Logger:
      - name: "kafka"
        level: "INFO"
        AppenderRef:
          ref: STDOUT
      - name: "kafka.network.RequestChannel$"
        level: "WARN"
        AppenderRef:
          ref: STDOUT
      - name: "kafka.producer.async.DefaultEventHandler"
        level: "DEBUG"
        AppenderRef:
          ref: STDOUT
      - name: "kafka.request.logger"
        level: "WARN"
        AppenderRef:
          ref: STDOUT
      - name: "kafka.controller"
        level: "TRACE"
        AppenderRef:
          ref: STDOUT
      - name: "kafka.log.LogCleaner"
        level: "INFO"
        AppenderRef:
          ref: STDOUT
      - name: "state.change.logger"
        level: "TRACE"
        AppenderRef:
          ref: STDOUT
      - name: "kafka.authorizer.logger"
        level: "WARN"
        AppenderRef:
          ref: STDOUT
{{- if getEnv "KAFKA_LOG4J_LOGGERS" "" -}}
{{- $defaultLoggers := splitToMapDefaults "," "org.reflections=ERROR" "" -}}
{{- $customLoggers := parseLog4jLoggers (getEnv "KAFKA_LOG4J_LOGGERS" "") $defaultLoggers -}}
{{- range $logger, $loglevel := $customLoggers -}}
      - name: "{{ $logger }}"
        level: "{{ $loglevel }}"
        AppenderRef:
          ref: STDOUT
{{- end -}}
{{- end -}}
