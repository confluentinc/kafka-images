---
version: '2'
services:
  zookeeper-1:
    image: ${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    labels:
    - io.confluent.docker.testing=true

  zookeeper-2:
    image: ${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    labels:
    - io.confluent.docker.testing=true

  zookeeper-3:
    image: ${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    labels:
    - io.confluent.docker.testing=true


  kerberos:
    image: ${DOCKER_REGISTRY}confluentinc/cp-kerberos:${DOCKER_TAG}
    network_mode: host
    environment:
      BOOTSTRAP: 0
    volumes:
    - /tmp/zookeeper-host-test/secrets:/tmp/keytab
    - /dev/urandom:/dev/random
    labels:
    - io.confluent.docker.testing=true

  zookeeper-sasl-1:
    image: ${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: sasl.example.com:22889:23889;sasl.example.com:32889:33889;sasl.example.com:42889:43889
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host-1-jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host-krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/zookeeper-host-test/secrets:/etc/kafka/secrets
    network_mode: host
    labels:
    - io.confluent.docker.testing=true
    extra_hosts:
    - "sasl.example.com:127.0.0.1"

  zookeeper-sasl-2:
    image: ${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: sasl.example.com:22889:23889;sasl.example.com:32889:33889;sasl.example.com:42889:43889
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host-2-jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host-krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/zookeeper-host-test/secrets:/etc/kafka/secrets
    network_mode: host
    labels:
    - io.confluent.docker.testing=true
    extra_hosts:
    - "sasl.example.com:127.0.0.1"

  zookeeper-sasl-3:
    image: ${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: sasl.example.com:22889:23889;sasl.example.com:32889:33889;sasl.example.com:42889:43889
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host-3-jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host-krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
    - /tmp/zookeeper-host-test/secrets:/etc/kafka/secrets
    network_mode: host
    labels:
    - io.confluent.docker.testing=true
    extra_hosts:
    - "sasl.example.com:127.0.0.1"
