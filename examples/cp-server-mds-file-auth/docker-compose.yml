version: '2.2'
services:
  cp-server:
    image: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/confluentinc/cp-server:8.0.x-latest-ubi9
    hostname: cp-server
    container_name: cp-server
    ports:
      - "9092:9092"
      - "8090:8090"  # REST Proxy (embedded)
      - "8080:8080"  # MDS API
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

      CONFLUENT_METRICS_ENABLE: 'false'

      # Enable MDS
      CONFLUENT_METADATA_SERVER_ENABLED: 'true'
      CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8080
      CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://localhost:8080

      # Authentication provider class for file-based user store
      CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BASIC
      CONFLUENT_METADATA_SERVER_AUTHENTICATION_PROVIDER_CLASS: io.confluent.kafka.security.auth.provider.FileBasedProvider
      CONFLUENT_METADATA_SERVER_AUTHENTICATION_PROVIDERS_FILE: /etc/mds-config/users.json

      # RBAC settings
      CONFLUENT_SECURITY_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      CONFLUENT_SECURITY_POLICY_PROVIDER_CLASS: io.confluent.kafka.security.policy.provider.SimpleRBACPolicyProvider
      CONFLUENT_ROLE_BINDINGS_FILE: /etc/mds-config/rolebindings.json

      # Super user
      CONFLUENT_SECURITY_SUPER_USERS: "User:admin"

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

    volumes:
      - ./mds-config:/etc/mds-config
