[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.type.TypeModifier;"
},
{
  "name":"[Lcom.google.protobuf.Value;"
},
{
  "name":"[Ljava.io.File;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Integer;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.Runnable;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.reflect.Field;"
},
{
  "name":"[Ljava.lang.reflect.Method;"
},
{
  "name":"[Ljava.util.Map$Entry;"
},
{
  "name":"[Ljava.util.concurrent.CompletableFuture;"
},
{
  "name":"[Ljava.util.concurrent.Future;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lkafka.network.KafkaListener;"
},
{
  "name":"[Lkafka.server.ssl.CertificateIdsJsonConfig;"
},
{
  "name":"[Lorg.apache.kafka.common.metrics.Sensor;"
},
{
  "name":"[Lorg.apache.kafka.common.metrics.stats.Percentile;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.Appender;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.AppenderRef;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.LoggerConfig;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.Property;"
},
{
  "name":"[Lorg.eclipse.jetty.ee10.servlet.FilterHolder;"
},
{
  "name":"[Lorg.eclipse.jetty.server.handler.ContextHandlerCollection$Branch;"
},
{
  "name":"[Lorg.glassfish.jersey.servlet.internal.spi.ServletContainerProvider;"
},
{
  "name":"[Lscala.Tuple2;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"[[I"
},
{
  "name":"boolean",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"fromString","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.fasterxml.jackson.core.JsonParser"
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllPublicMethods":true,
  "methods":[{"name":"addUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"checkCanDeserialize","parameterTypes":["boolean"] }, {"name":"checkCanSerialize","parameterTypes":["boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","boolean"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"getSize","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"isEnabled","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"isReadable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"isWriteable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"locateMapper","parameterTypes":["java.lang.Class","jakarta.ws.rs.core.MediaType"] }, {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.InputStream"] }, {"name":"removeUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"setAnnotationsToUse","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.Annotations[]"] }, {"name":"setDefaultReadView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultWriteView","parameterTypes":["java.lang.Class"] }, {"name":"setMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"version","parameterTypes":[] }, {"name":"writeTo","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.OutputStream"] }]
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
},
{
  "name":"com.fasterxml.jackson.jakarta.rs.base.JsonMappingExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.databind.JsonMappingException"] }]
},
{
  "name":"com.fasterxml.jackson.jakarta.rs.base.JsonParseExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.core.JsonParseException"] }]
},
{
  "name":"com.fasterxml.jackson.jakarta.rs.base.ProviderBase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"_addSuperTypes","parameterTypes":["java.lang.Class","java.lang.Class","java.util.Collection","boolean"] }, {"name":"_configForReading","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper","java.lang.annotation.Annotation[]","java.lang.Class"] }, {"name":"_configForReading","parameterTypes":["com.fasterxml.jackson.databind.ObjectReader","java.lang.annotation.Annotation[]"] }, {"name":"_configForWriting","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper","java.lang.annotation.Annotation[]","java.lang.Class"] }, {"name":"_configForWriting","parameterTypes":["com.fasterxml.jackson.databind.ObjectWriter","java.lang.annotation.Annotation[]"] }, {"name":"_containedIn","parameterTypes":["java.lang.Class","java.util.HashSet"] }, {"name":"_createGenerator","parameterTypes":["com.fasterxml.jackson.databind.ObjectWriter","java.io.OutputStream","com.fasterxml.jackson.core.JsonEncoding"] }, {"name":"_createNoContentException","parameterTypes":[] }, {"name":"_createParser","parameterTypes":["com.fasterxml.jackson.databind.ObjectReader","java.io.InputStream"] }, {"name":"_endpointForReading","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap"] }, {"name":"_endpointForWriting","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap"] }, {"name":"_findCustomUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"_isIgnorableForReading","parameterTypes":["com.fasterxml.jackson.jakarta.rs.base.util.ClassKey"] }, {"name":"_isIgnorableForWriting","parameterTypes":["com.fasterxml.jackson.jakarta.rs.base.util.ClassKey"] }, {"name":"_isSpecialReadable","parameterTypes":["java.lang.Class"] }, {"name":"_locateMapperViaProvider","parameterTypes":["java.lang.Class","jakarta.ws.rs.core.MediaType"] }, {"name":"_modifyHeaders","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MultivaluedMap","com.fasterxml.jackson.jakarta.rs.cfg.EndpointConfigBase"] }, {"name":"_this","parameterTypes":[] }, {"name":"addUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"checkCanDeserialize","parameterTypes":["boolean"] }, {"name":"checkCanSerialize","parameterTypes":["boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","boolean"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"findEncoding","parameterTypes":["jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap"] }, {"name":"findSuperTypes","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"findSuperTypes","parameterTypes":["java.lang.Class","java.lang.Class","java.util.List"] }, {"name":"getSize","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"hasMatchingMediaType","parameterTypes":["jakarta.ws.rs.core.MediaType"] }, {"name":"hasMatchingMediaTypeForReading","parameterTypes":["jakarta.ws.rs.core.MediaType"] }, {"name":"hasMatchingMediaTypeForWriting","parameterTypes":["jakarta.ws.rs.core.MediaType"] }, {"name":"isEnabled","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"isReadable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"isWriteable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"locateMapper","parameterTypes":["java.lang.Class","jakarta.ws.rs.core.MediaType"] }, {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.InputStream"] }, {"name":"removeUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"setAnnotationsToUse","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.Annotations[]"] }, {"name":"setDefaultReadView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultWriteView","parameterTypes":["java.lang.Class"] }, {"name":"setJSONPFunctionName","parameterTypes":["java.lang.String"] }, {"name":"setMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"writeTo","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.OutputStream"] }]
},
{
  "name":"com.fasterxml.jackson.jakarta.rs.json.JacksonJsonProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"_configForReading","parameterTypes":["com.fasterxml.jackson.databind.ObjectReader","java.lang.annotation.Annotation[]"] }, {"name":"_configForWriting","parameterTypes":["com.fasterxml.jackson.databind.ObjectWriter","java.lang.annotation.Annotation[]"] }, {"name":"_locateMapperViaProvider","parameterTypes":["java.lang.Class","jakarta.ws.rs.core.MediaType"] }, {"name":"hasMatchingMediaType","parameterTypes":["jakarta.ws.rs.core.MediaType"] }, {"name":"setJSONPFunctionName","parameterTypes":["java.lang.String"] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.jakarta.rs.json.JacksonXmlBindJsonProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.BiMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableBiMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableBiMapFauxverideShim",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableSet$CachingAsList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableSortedMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.ImmutableSortedMapFauxverideShim",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableSortedSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableSortedSetFauxverideShim",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.RegularImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.RegularImmutableSortedSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.SingletonImmutableBiMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.SortedIterable",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[{"name":"listeners"}, {"name":"value"}, {"name":"waiters"}]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[{"name":"next"}, {"name":"thread"}]
},
{
  "name":"com.google.common.util.concurrent.AtomicDouble",
  "fields":[{"name":"value"}]
},
{
  "name":"com.google.protobuf.Any",
  "methods":[{"name":"getTypeUrl","parameterTypes":[] }, {"name":"getTypeUrlBytes","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Any$Builder",
  "methods":[{"name":"clearTypeUrl","parameterTypes":[] }, {"name":"clearValue","parameterTypes":[] }, {"name":"getTypeUrl","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setTypeUrl","parameterTypes":["java.lang.String"] }, {"name":"setTypeUrlBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setValue","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"com.google.protobuf.BoolValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.BoolValue$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["boolean"] }]
},
{
  "name":"com.google.protobuf.BytesValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.BytesValue$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"com.google.protobuf.DescriptorMessageInfoFactory",
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.DoubleValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.DoubleValue$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["double"] }]
},
{
  "name":"com.google.protobuf.Duration",
  "methods":[{"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Duration$Builder",
  "methods":[{"name":"clearNanos","parameterTypes":[] }, {"name":"clearSeconds","parameterTypes":[] }, {"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }, {"name":"setNanos","parameterTypes":["int"] }, {"name":"setSeconds","parameterTypes":["long"] }]
},
{
  "name":"com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.FloatValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.FloatValue$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["float"] }]
},
{
  "name":"com.google.protobuf.Int32Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Int32Value$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["int"] }]
},
{
  "name":"com.google.protobuf.Int64Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Int64Value$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["long"] }]
},
{
  "name":"com.google.protobuf.ListValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.NullValue",
  "methods":[{"name":"getValueDescriptor","parameterTypes":[] }, {"name":"valueOf","parameterTypes":["com.google.protobuf.Descriptors$EnumValueDescriptor"] }]
},
{
  "name":"com.google.protobuf.StringValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"getValueBytes","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.StringValue$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["java.lang.String"] }, {"name":"setValueBytes","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"com.google.protobuf.Struct",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Timestamp",
  "methods":[{"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Timestamp$Builder",
  "methods":[{"name":"clearNanos","parameterTypes":[] }, {"name":"clearSeconds","parameterTypes":[] }, {"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }, {"name":"setNanos","parameterTypes":["int"] }, {"name":"setSeconds","parameterTypes":["long"] }]
},
{
  "name":"com.google.protobuf.UInt32Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.UInt32Value$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["int"] }]
},
{
  "name":"com.google.protobuf.UInt64Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.UInt64Value$Builder",
  "methods":[{"name":"clearValue","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["long"] }]
},
{
  "name":"com.google.protobuf.Value",
  "methods":[{"name":"getBoolValue","parameterTypes":[] }, {"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getKindCase","parameterTypes":[] }, {"name":"getListValue","parameterTypes":[] }, {"name":"getNullValue","parameterTypes":[] }, {"name":"getNullValueValue","parameterTypes":[] }, {"name":"getNumberValue","parameterTypes":[] }, {"name":"getStringValue","parameterTypes":[] }, {"name":"getStringValueBytes","parameterTypes":[] }, {"name":"getStructValue","parameterTypes":[] }, {"name":"hasBoolValue","parameterTypes":[] }, {"name":"hasListValue","parameterTypes":[] }, {"name":"hasNullValue","parameterTypes":[] }, {"name":"hasNumberValue","parameterTypes":[] }, {"name":"hasStringValue","parameterTypes":[] }, {"name":"hasStructValue","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Value$Builder",
  "methods":[{"name":"clearBoolValue","parameterTypes":[] }, {"name":"clearKind","parameterTypes":[] }, {"name":"clearListValue","parameterTypes":[] }, {"name":"clearNullValue","parameterTypes":[] }, {"name":"clearNumberValue","parameterTypes":[] }, {"name":"clearStringValue","parameterTypes":[] }, {"name":"clearStructValue","parameterTypes":[] }, {"name":"getBoolValue","parameterTypes":[] }, {"name":"getKindCase","parameterTypes":[] }, {"name":"getListValue","parameterTypes":[] }, {"name":"getListValueBuilder","parameterTypes":[] }, {"name":"getNullValue","parameterTypes":[] }, {"name":"getNullValueValue","parameterTypes":[] }, {"name":"getNumberValue","parameterTypes":[] }, {"name":"getStringValue","parameterTypes":[] }, {"name":"getStructValue","parameterTypes":[] }, {"name":"getStructValueBuilder","parameterTypes":[] }, {"name":"hasBoolValue","parameterTypes":[] }, {"name":"hasListValue","parameterTypes":[] }, {"name":"hasNullValue","parameterTypes":[] }, {"name":"hasNumberValue","parameterTypes":[] }, {"name":"hasStringValue","parameterTypes":[] }, {"name":"hasStructValue","parameterTypes":[] }, {"name":"setBoolValue","parameterTypes":["boolean"] }, {"name":"setListValue","parameterTypes":["com.google.protobuf.ListValue"] }, {"name":"setNullValue","parameterTypes":["com.google.protobuf.NullValue"] }, {"name":"setNullValueValue","parameterTypes":["int"] }, {"name":"setNumberValue","parameterTypes":["double"] }, {"name":"setStringValue","parameterTypes":["java.lang.String"] }, {"name":"setStringValueBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setStructValue","parameterTypes":["com.google.protobuf.Struct"] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.ConsumerOutboundCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskUsageDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.IncrementalCPUResourceDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.IncrementalTopicReplicaDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.LeaderReplicaDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.MirrorInboundCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.MovementExclusionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundUsageDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundUsageDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.ProducerInboundCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicationInboundCapacityGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.SystemTopicEvenDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.analyzer.goals.TopicReplicaDistributionGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.common.KafkaCruiseControlThreadFactory"
},
{
  "name":"com.linkedin.kafka.cruisecontrol.config.BrokerCapacityResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.executor.ExecutorNoopNotifier",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.executor.strategy.BaseReplicaMovementStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.linkedin.kafka.cruisecontrol.monitor.LoadMonitor$SensorUpdater"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.KeyWrapCipher$AES_KW_NoPadding",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.RSACipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$Counter",
  "queryAllPublicConstructors":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$CounterMBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$Gauge",
  "queryAllPublicConstructors":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$GaugeMBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$Histogram",
  "queryAllPublicConstructors":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$HistogramMBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$Meter",
  "queryAllPublicConstructors":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$MeterMBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$Timer",
  "queryAllPublicConstructors":true
},
{
  "name":"com.yammer.metrics.reporting.JmxReporter$TimerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"int",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"fromString","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.confluent.auditlogapi.entities.AuditLogConfigDefaultTopics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAllowed","parameterTypes":[] }, {"name":"getDenied","parameterTypes":[] }]
},
{
  "name":"io.confluent.auditlogapi.entities.AuditLogConfigDestinationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getRetentionMs","parameterTypes":[] }]
},
{
  "name":"io.confluent.auditlogapi.entities.AuditLogConfigDestinations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getBootstrapServers","parameterTypes":[] }, {"name":"getTopics","parameterTypes":[] }]
},
{
  "name":"io.confluent.auditlogapi.entities.AuditLogConfigMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getModifiedSince","parameterTypes":[] }, {"name":"getResourceVersion","parameterTypes":[] }, {"name":"getUpdatedAt","parameterTypes":[] }]
},
{
  "name":"io.confluent.auditlogapi.entities.AuditLogConfigSpec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getDefaultTopics","parameterTypes":[] }, {"name":"getDestinations","parameterTypes":[] }, {"name":"getExcludedPrincipals","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"getRoutes","parameterTypes":[] }]
},
{
  "name":"io.confluent.common.security.jetty.CompositeAuthenticator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.common.security.jetty.CompositeLoginService",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.common.security.jetty.jmx.CompositeAuthenticatorMBean"
},
{
  "name":"io.confluent.common.security.jetty.jmx.CompositeLoginServiceMBean"
},
{
  "name":"io.confluent.cruisecontrol.analyzer.goals.CellAwareGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.cruisecontrol.analyzer.goals.MaxReplicaMovementParallelismGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.cruisecontrol.analyzer.goals.ReplicaPlacementGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.cruisecontrol.analyzer.goals.TenantAwareGoal",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.cruisecontrol.metricsreporter.ConfluentTelemetryReporterSampler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.databalancer.SbcDataBalanceManager",
  "methods":[{"name":"<init>","parameterTypes":["kafka.server.KafkaConfig","java.util.Optional"] }]
},
{
  "name":"io.confluent.databalancer.persistence.ApiStatePersistenceStore$SbkApiStatusKeySerde",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.databalancer.persistence.ApiStatePersistenceStore$SbkApiStatusMessageSerde",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.security.authenticator.OAuthKafkaPrincipalBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.serializers.context.NullContextNameStrategy"
},
{
  "name":"io.confluent.kafka.serializers.schema.id.DualSchemaIdDeserializer"
},
{
  "name":"io.confluent.kafka.serializers.schema.id.PrefixSchemaIdSerializer"
},
{
  "name":"io.confluent.kafka.serializers.subject.TopicNameStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.server.plugins.auth.stats.AuthenticationStats",
  "queryAllPublicConstructors":true
},
{
  "name":"io.confluent.kafka.server.plugins.auth.stats.AuthenticationStatsMBean",
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.kafkarest.KafkaRestResourceExtension",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.backends.BackendsModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.backends.ExtensionsBackendsModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.backends.kafka.KafkaModule$AdminFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["io.confluent.kafkarest.KafkaRestContext"] }, {"name":"provide","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.backends.kafka.KafkaModule$KafkaRestContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["io.confluent.kafkarest.KafkaRestConfig"] }, {"name":"provide","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.common.KafkaFutures"
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$AdvertisedListenersConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ApiEndpointsAllowlistConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ApiEndpointsBlocklistConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$AvroSerializerConfigs",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$CrnAuthorityConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$HostNameConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$JsonSerializerConfigs",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$JsonschemaSerializerConfigs",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ListenersConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$MaxSchemasPerSubjectConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$NullRequestBodyAlwaysPublishEmptyRecordEnabledConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$PortConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceBatchMaximumEntriesConfig",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceRateLimitBytesConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceRateLimitBytesGlobalConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceRateLimitCacheExpiryConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceRateLimitCountConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceRateLimitCountGlobalConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceRateLimitEnabledConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProduceResponseThreadPoolSizeConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProducerConfigs",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$ProtobufSerializerConfigs",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$RateLimitCostsConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$RateLimitDefaultCostConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$RateLimitEnabledConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$RateLimitPerClusterCacheExpiryConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$RateLimitPerClusterPermitsPerSecConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$RateLimitPermitsPerSecConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$RateLimitTimeoutConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$SchemaRegistryConfigs",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$SchemaRegistryRequestHeadersConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$SchemaRegistryUrlsConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$StreamingMaxConnectionDurationConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.config.ConfigModule$StreamingMaxConnectionGracePeriod",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.controllers.CloudUIInternalModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.controllers.ClusterManagerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.kafka.clients.admin.Admin"] }]
},
{
  "name":"io.confluent.kafkarest.controllers.ControllersModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.controllers.ExtensionsControllersModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.controllers.UIInternalModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.controllers.UIInternalModule$SimpleConsumeExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.entities.Acl$Operation",
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.kafkarest.entities.Acl$PatternType",
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.kafkarest.entities.Acl$Permission",
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.kafkarest.entities.Acl$ResourceType",
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.kafkarest.entities.BrokerTaskType",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getBrokerTaskType","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.entities.ClusterConfig$Type",
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.kafkarest.entities.MirrorStatus",
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.kafkarest.exceptions.ClusterLinkDisabledExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toResponse","parameterTypes":["org.apache.kafka.common.errors.ClusterLinkDisabledException"] }]
},
{
  "name":"io.confluent.kafkarest.exceptions.ClusterLinkInUseExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toResponse","parameterTypes":["org.apache.kafka.common.errors.ClusterLinkInUseException"] }]
},
{
  "name":"io.confluent.kafkarest.exceptions.ExceptionsModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.exceptions.ExceptionsModule$DelegatingExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.ws.rs.core.UriInfo"] }, {"name":"toResponse","parameterTypes":["io.confluent.kafkarest.exceptions.StatusCodeException"] }]
},
{
  "name":"io.confluent.kafkarest.exceptions.KafkaRestExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getResponse","parameterTypes":["java.lang.Throwable","jakarta.ws.rs.core.Response$Status","int"] }, {"name":"toResponse","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"io.confluent.kafkarest.extension.EmbeddedKafkaModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.extension.EnumConverterProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConverter","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]"] }]
},
{
  "name":"io.confluent.kafkarest.extension.InstantConverterProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConverter","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]"] }]
},
{
  "name":"io.confluent.kafkarest.extension.ResourceAccesslistFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Set","java.util.Set"] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.container.ResourceInfo","jakarta.ws.rs.core.FeatureContext"] }, {"name":"isBlockedByAccesslist","parameterTypes":["jakarta.ws.rs.container.ResourceInfo","java.util.Set","boolean"] }, {"name":"isOptionsProcessor","parameterTypes":["jakarta.ws.rs.container.ResourceInfo"] }]
},
{
  "name":"io.confluent.kafkarest.extension.ResourceAccesslistFeature$ResourceName",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.ratelimit.RateLimitFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean"] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.ratelimit.RateLimitFeature$NullRateLimitModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.requestlog.CustomLog",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.kafkarest.requestlog.jmx.CustomLogMBean"
},
{
  "name":"io.confluent.kafkarest.resources.ExtensionsResourcesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.resources.HealthCheckAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getServiceHealth","parameterTypes":["jakarta.ws.rs.container.AsyncResponse"] }]
},
{
  "name":"io.confluent.kafkarest.resources.ResourcesFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.AclsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"createAcl","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.v3.CreateAclRequest"] }, {"name":"deleteAcls","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.Acl$ResourceType","java.lang.String","io.confluent.kafkarest.entities.Acl$PatternType","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.Acl$Operation","io.confluent.kafkarest.entities.Acl$Permission"] }, {"name":"searchAcls","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.Acl$ResourceType","java.lang.String","io.confluent.kafkarest.entities.Acl$PatternType","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.Acl$Operation","io.confluent.kafkarest.entities.Acl$Permission"] }, {"name":"toAclData","parameterTypes":["io.confluent.kafkarest.entities.Acl"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.AlterBrokerConfigBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"alterBrokerConfigBatch","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","int","io.confluent.kafkarest.entities.v3.AlterBrokerConfigBatchRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.AlterClusterConfigBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"alterClusterConfigBatch","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.ClusterConfig$Type","io.confluent.kafkarest.entities.v3.AlterClusterConfigBatchRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.AlterLinkConfigBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"alterLink","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.AlterLinkConfigBatchRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.AlterTopicConfigBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"alterTopicConfigBatch","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.AlterTopicConfigBatchRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.BalancerResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getAnyUnevenLoad","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"getBalancer","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"toAnyUnevenLoadData","parameterTypes":["io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.entities.BalancerAnyUnevenLoadStatus"] }, {"name":"toBalancerData","parameterTypes":["io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.entities.Balancer"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.BrokerConfigsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getBrokerConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","int","java.lang.String"] }, {"name":"listBrokerConfigs","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","int"] }, {"name":"resetBrokerConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","int","java.lang.String"] }, {"name":"toBrokerConfigData","parameterTypes":["io.confluent.kafkarest.entities.BrokerConfig","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.response.UrlFactory"] }, {"name":"updateBrokerConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","int","java.lang.String","io.confluent.kafkarest.entities.v3.UpdateBrokerConfigRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.BrokerReplicaExclusionResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getBrokerReplicaExclusion","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","int"] }, {"name":"listBrokerReplicaExclusions","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"toAlterBrokerReplicaExclusionData","parameterTypes":["io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.entities.AlterBrokerReplicaExclusion"] }, {"name":"toBrokerReplicaExclusionData","parameterTypes":["io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.entities.BrokerReplicaExclusion"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.BrokerTaskByBrokerResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getBrokerTask","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.Integer","io.confluent.kafkarest.entities.BrokerTaskType"] }, {"name":"listBrokerTasksByBroker","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.Integer"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.BrokerTaskResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listBrokerTasks","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"listBrokerTasksByTaskType","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.BrokerTaskType"] }, {"name":"toBrokerTaskData","parameterTypes":["io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.entities.BrokerTask"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.BrokersResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getBroker","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.Integer"] }, {"name":"listBrokers","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"toBrokerData","parameterTypes":["io.confluent.kafkarest.entities.Broker"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.CellsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"describeCells","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.CloudUIInternalResourcesFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ClusterConfigsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"deleteClusterConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.ClusterConfig$Type","java.lang.String"] }, {"name":"getClusterConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.ClusterConfig$Type","java.lang.String"] }, {"name":"listClusterConfigs","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.ClusterConfig$Type"] }, {"name":"toClusterConfigData","parameterTypes":["io.confluent.kafkarest.entities.ClusterConfig"] }, {"name":"upsertClusterConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.ClusterConfig$Type","java.lang.String","io.confluent.kafkarest.entities.v3.UpdateClusterConfigRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ClustersResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.inject.Provider","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.response.UrlFactory"] }, {"name":"getCluster","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"listClusters","parameterTypes":["jakarta.ws.rs.container.AsyncResponse"] }, {"name":"toClusterData","parameterTypes":["io.confluent.kafkarest.entities.Cluster"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ConsumerAssignmentsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getConsumerAssignment","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String","java.lang.String","int"] }, {"name":"listConsumerAssignments","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"toConsumerAssignmentData","parameterTypes":["io.confluent.kafkarest.entities.ConsumerAssignment"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ConsumerGroupLagSummariesResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getConsumerGroupLagSummary","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"toConsumerGroupLagSummaryData","parameterTypes":["io.confluent.kafkarest.entities.ConsumerGroupLagSummary"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ConsumerGroupOffsetsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"checkConsumerGroupExists","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getConsumerGroupOffsets","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"updateConsumerGroupOffset","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.UpdateConsumerGroupOffsetsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ConsumerGroupsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getConsumerGroup","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"listConsumerGroups","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"toConsumerGroupData","parameterTypes":["java.lang.String","io.confluent.kafkarest.entities.ConsumerGroup"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ConsumerLagsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getConsumerLag","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String","java.lang.Integer"] }, {"name":"listConsumerLags","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"toConsumerLagData","parameterTypes":["io.confluent.kafkarest.entities.ConsumerLag"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ConsumersResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getConsumer","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"listConsumers","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"toConsumerData","parameterTypes":["io.confluent.kafkarest.entities.Consumer"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.CreateAclBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"createAcls","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.v3.CreateAclBatchRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.CreateBrokerReplicaExclusionBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"createBrokerReplicaExclusion","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.v3.BrokerReplicaExclusionBatchRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.DefaultTopicConfigsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listDefaultTopicConfigs","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.DeleteBrokerReplicaExclusionBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"deleteBrokerReplicaExclusion","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.v3.BrokerReplicaExclusionBatchRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ExtensionsBrokerAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"removeBrokers","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.RemoveBrokersRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ExtensionsBrokersResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"removeBroker","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.Integer","boolean"] }, {"name":"toBrokerRemovalData","parameterTypes":["io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.entities.BrokerRemoval"] }, {"name":"unregisterBroker","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.Integer"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ExtensionsV3ResourcesFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.FailoverMirrorAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"failoverMirrors","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.AlterMirrorsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.GetLastProducedTimeAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getLastProducedTime","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.GetReassignmentAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getReassignment","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Integer"] }, {"name":"toReassignmentData","parameterTypes":["io.confluent.kafkarest.entities.Reassignment"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.LinkConfigResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getLinkConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"listLinkConfigs","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"resetLinkConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"toLinkConfigData","parameterTypes":["io.confluent.kafkarest.entities.LinkConfig"] }, {"name":"updateLinkConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.UpdateLinkConfigRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.LinkResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"createLink","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","boolean","io.confluent.kafkarest.entities.v3.CreateLinkRequest"] }, {"name":"deleteLink","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","boolean"] }, {"name":"getLink","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Boolean"] }, {"name":"listLinks","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"toLinkDataList","parameterTypes":["java.util.List","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ListAllBrokersConfigsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listBrokersConfigs","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ListAllLastProducedTimesAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listAllLastProducedTimes","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ListAllMirrorsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listAllMirrors","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ListAllReassignmentsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listReassignments","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"toReassignmentData","parameterTypes":["io.confluent.kafkarest.entities.Reassignment"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ListAllReplicaStatusesAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listAllReplicaStatuses","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ListAllTopicsConfigsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listTopicConfigs","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ListPartitionOffsetsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listPartitionOffsets","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Integer","java.lang.String"] }, {"name":"toPartitionWithOffsetsData","parameterTypes":["io.confluent.kafkarest.entities.Partition","java.lang.String"] }, {"name":"toPartitionWithOffsetsData","parameterTypes":["io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.entities.Partition","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.MirrorResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"createMirror","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.CreateMirrorRequest"] }, {"name":"getMirror","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String","java.lang.Boolean"] }, {"name":"listMirrors","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.MirrorStatus"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.PartitionsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getPartition","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Integer"] }, {"name":"listPartitions","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"toPartitionData","parameterTypes":["io.confluent.kafkarest.entities.Partition"] }, {"name":"toPartitionData","parameterTypes":["io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.response.UrlFactory","io.confluent.kafkarest.entities.Partition"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.PauseMirrorAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"pauseMirrors","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.AlterMirrorsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ProduceAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getSchema","parameterTypes":["java.lang.String","boolean","io.confluent.kafkarest.entities.v3.ProduceRequest$ProduceRequestData"] }, {"name":"produce","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.response.JsonStream"] }, {"name":"produce","parameterTypes":["java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.ProduceRequest","io.confluent.kafkarest.controllers.ProduceController","io.confluent.kafkarest.resources.v3.ProducerMetrics"] }, {"name":"recordErrorMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics","long"] }, {"name":"recordRateLimitedMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics"] }, {"name":"recordRequestMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics","long"] }, {"name":"recordResponseMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics","long"] }, {"name":"serialize","parameterTypes":["java.lang.String","java.util.Optional","java.util.Optional","java.util.Optional","boolean"] }, {"name":"toProduceResponse","parameterTypes":["java.lang.String","java.lang.String","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","io.confluent.kafkarest.entities.ProduceResult"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ProduceBatchAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getSchema","parameterTypes":["java.lang.String","boolean","io.confluent.kafkarest.entities.v3.ProduceRequest$ProduceRequestData"] }, {"name":"produce","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.ProduceBatchRequest"] }, {"name":"produce","parameterTypes":["java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.ProduceBatchRequestEntry","io.confluent.kafkarest.controllers.ProduceController","io.confluent.kafkarest.resources.v3.ProducerMetrics"] }, {"name":"recordErrorMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics","long"] }, {"name":"recordRateLimitedMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics"] }, {"name":"recordRequestMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics","long"] }, {"name":"recordResponseMetrics","parameterTypes":["io.confluent.kafkarest.resources.v3.ProducerMetrics","long"] }, {"name":"serialize","parameterTypes":["java.lang.String","java.util.Optional","java.util.Optional","java.util.Optional","boolean"] }, {"name":"toErrorEntryForException","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"toResponseSuccessEntry","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","io.confluent.kafkarest.entities.ProduceResult"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.PromoteMirrorAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"promoteMirrors","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.AlterMirrorsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.RemoveBrokerTaskResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getRemoveBrokerTask","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.Integer"] }, {"name":"listRemoveBrokerTasks","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String"] }, {"name":"toRemoveBrokerTaskData","parameterTypes":["io.confluent.kafkarest.entities.RemoveBrokerTask"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ReplicaStatusByPartitionResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listReplicaStatus","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","int"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ReplicaStatusResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listReplicaStatus","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ReplicasResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getReplica","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Integer","java.lang.Integer"] }, {"name":"listReplicas","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Integer"] }, {"name":"toReplicaData","parameterTypes":["io.confluent.kafkarest.entities.PartitionReplica"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ResumeMirrorAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"resumeMirrors","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.AlterMirrorsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ReverseAndPauseMirrorAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"reverseAndPauseMirrorAction","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.AlterMirrorsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.ReverseAndStartMirrorAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"reverseAndStartMirrorAction","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","io.confluent.kafkarest.entities.v3.AlterMirrorsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.SearchReassignmentsByTopicAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"listReassignmentsByTopic","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"toReassignmentData","parameterTypes":["io.confluent.kafkarest.entities.Reassignment"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.SearchReplicasByBrokerAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"searchReplicasByBroker","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.Integer"] }, {"name":"toReplicaData","parameterTypes":["io.confluent.kafkarest.entities.PartitionReplica"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.SimpleConsumeAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"checkClusterTopicExist","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"checkOffsetsInMultiPartitionRequest","parameterTypes":["io.confluent.kafkarest.entities.v3.SimpleConsumeMultiPartitionRequest"] }, {"name":"consumeFromPartition","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Integer","java.lang.String","java.lang.String","java.lang.String","java.lang.Integer","java.lang.Integer","java.lang.Integer"] }, {"name":"consumeFromPartitions","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.SimpleConsumeMultiPartitionRequest"] }, {"name":"consumeFromPartitionsGuaranteeProgress","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.SimpleConsumeMultiPartitionRequest"] }, {"name":"doConsumeFromPartitions","parameterTypes":["java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.SimpleConsumeMultiPartitionRequest","boolean"] }, {"name":"getOffsetsForPartition","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.Integer","java.lang.String","java.lang.String"] }, {"name":"getOffsetsForPartitions","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"getPositionCriteriaCountConsumeFromPartition","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, {"name":"getPositionCriteriaCountFromMultiPartitionRequest","parameterTypes":["io.confluent.kafkarest.entities.v3.SimpleConsumeMultiPartitionRequest"] }, {"name":"validateBooleanQueryParameter","parameterTypes":["java.lang.String"] }, {"name":"validateLongQueryParameter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"validatePartitions","parameterTypes":["java.util.Set","java.util.List"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.TopicConfigsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getTopicConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"listTopicConfigs","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"resetTopicConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"toTopicConfigData","parameterTypes":["io.confluent.kafkarest.entities.TopicConfig","io.confluent.kafkarest.response.CrnFactory","io.confluent.kafkarest.response.UrlFactory"] }, {"name":"updateTopicConfig","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.UpdateTopicConfigRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.TopicsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"createTopic","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","io.confluent.kafkarest.entities.v3.CreateTopicRequest"] }, {"name":"deleteTopic","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String"] }, {"name":"getTopic","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean"] }, {"name":"listTopics","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","boolean"] }, {"name":"toTopicData","parameterTypes":["io.confluent.kafkarest.entities.Topic"] }, {"name":"updatePartitionsCount","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","io.confluent.kafkarest.entities.v3.PartitionsCountRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.TruncateAndRestoreMirrorAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"truncateAndRestoreMirrorAction","parameterTypes":["jakarta.ws.rs.container.AsyncResponse","java.lang.String","java.lang.String","boolean","boolean","io.confluent.kafkarest.entities.v3.AlterMirrorsRequest"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.UIInternalResourcesFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.V3ResourcesFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.V3ResourcesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.resources.v3.V3ResourcesModule$ProduceResponseThreadPool",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.response.CrnFactoryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.confluent.kafkarest.response.JsonStreamMessageBodyReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isReadable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.InputStream"] }]
},
{
  "name":"io.confluent.kafkarest.response.ResponseModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafkarest.response.UrlFactoryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.Integer","java.util.List","java.util.List","jakarta.ws.rs.core.UriInfo"] }]
},
{
  "name":"io.confluent.license.LicenseStore$LicenseKeySerde",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.license.LicenseStore$LicenseMessageSerde",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.log4j2.redactor.RedactorPolicy"
},
{
  "name":"io.confluent.metadataapi.entities.ClusterId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"id","parameterTypes":[] }, {"name":"scope","parameterTypes":[] }]
},
{
  "name":"io.confluent.metadataapi.errormappers.MetadataApiExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["java.lang.Exception"] }]
},
{
  "name":"io.confluent.metadataapi.resources.MetadataResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"analyticsId","parameterTypes":[] }, {"name":"id","parameterTypes":[] }, {"name":"schemaRegistryUrls","parameterTypes":[] }]
},
{
  "name":"io.confluent.oidc.errormappers.EncryptionFailedExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.EncryptionFailedException"] }]
},
{
  "name":"io.confluent.oidc.errormappers.IdpAuthExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.IdpAuthException"] }]
},
{
  "name":"io.confluent.oidc.errormappers.InvalidCodeExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.InvalidCodeException"] }]
},
{
  "name":"io.confluent.oidc.errormappers.InvalidDeviceKeyExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.InvalidDeviceKeyException"] }]
},
{
  "name":"io.confluent.oidc.errormappers.InvalidStateExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.InvalidStateException"] }]
},
{
  "name":"io.confluent.rbacapi.entities.ClusterInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.entities.HostInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.entities.MdsScope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.util.List","java.util.Map"] }]
},
{
  "name":"io.confluent.rbacapi.entities.Protocol",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.rbacapi.entities.ResourcesRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["io.confluent.rbacapi.entities.MdsScope","java.util.List"] }]
},
{
  "name":"io.confluent.rbacapi.errorhandlers.NoJettyDefaultStackTraceErrorHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.rbacapi.errorhandlers.jmx.NoJettyDefaultStackTraceErrorHandlerMBean"
},
{
  "name":"io.confluent.rbacapi.errormappers.ClusterRegistryConflictExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryConflictException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.ClusterRegistryGenericClientErrorExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryGenericClientErrorException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.ClusterRegistryNoAccessExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryNoAccessException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.ClusterRegistryNotFoundExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryNotFoundException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.ClusterRegistryUpdateExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryUpdateException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.ClusterRegistryVerifyExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryVerifyException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.ConstraintViolationExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["jakarta.validation.ConstraintViolationException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.CrnSyntaxExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.crn.CrnSyntaxException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.DeletedNonexistentResourceExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.DeletedNonexistentResourceException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.KafkaApiExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["org.apache.kafka.common.errors.ApiException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.KafkaExecutionExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["java.util.concurrent.ExecutionException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.Mds400ExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["jakarta.ws.rs.ClientErrorException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.MdsJacksonBindingErrorMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["com.fasterxml.jackson.databind.exc.PropertyBindingException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.MdsJacksonParseErrorMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["com.fasterxml.jackson.core.JsonParseException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.MdsJacksonProcessingErrorMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["com.fasterxml.jackson.core.JsonProcessingException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.MdsJerseyExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["org.glassfish.jersey.server.ParamException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.MdsUncaughtExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.MdsValidationExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["jakarta.validation.ValidationException"] }]
},
{
  "name":"io.confluent.rbacapi.errormappers.TimeoutExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["java.util.concurrent.TimeoutException"] }]
},
{
  "name":"io.confluent.rbacapi.jackson.MdsJacksonMessageBodyProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1AclResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"createAcl","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.security.auth.client.rest.entities.CreateAclRequest"] }, {"name":"createAcls","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.security.auth.client.rest.entities.CreateAclsRequest"] }, {"name":"deleteAcls","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.security.auth.client.rest.entities.AclFilter"] }, {"name":"deleteAcls","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.security.auth.client.rest.entities.DeleteAclsRequest"] }, {"name":"describeAcls","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.security.auth.client.rest.entities.AclFilter"] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1AuditLogConfigResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getConfig","parameterTypes":["jakarta.ws.rs.core.SecurityContext"] }, {"name":"listRoutes","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String"] }, {"name":"putConfig","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.ws.rs.core.SecurityContext","io.confluent.auditlogapi.entities.AuditLogConfigSpec"] }, {"name":"resolveResourceRoute","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String"] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1AuthorizeResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"authorize","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.rbacapi.entities.AuthorizeRequest"] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1ClusterRegistryResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"deleteNamedCluster","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String"] }, {"name":"getAllClusters","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.rbacapi.utils.ClusterType"] }, {"name":"getNamedCluster","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String"] }, {"name":"updateClusters","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.util.List"] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1FeaturesResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"features","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1LookupResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getScopedRoleNames","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"getTargetPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String"] }, {"name":"getUserVisibility","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.util.List"] }, {"name":"getUserVisibilityHelper","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.util.List"] }, {"name":"getVisibilityResponse","parameterTypes":["io.confluent.rbacapi.entities.VisibilityRequest","java.util.Set","org.apache.kafka.common.security.auth.KafkaPrincipal"] }, {"name":"listManagedClustersForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"listManagedClustersForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.utils.ClusterType"] }, {"name":"listManagedClustersForPrincipalByClusterType","parameterTypes":["jakarta.ws.rs.core.SecurityContext","org.apache.kafka.common.security.auth.KafkaPrincipal","io.confluent.rbacapi.utils.ClusterType"] }, {"name":"listManagedClustersForPrincipalByMdsScope","parameterTypes":["jakarta.ws.rs.core.SecurityContext","org.apache.kafka.common.security.auth.KafkaPrincipal","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"lookupPrincipalsWithRole","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"lookupPrincipalsWithRoleOnResource","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"lookupResourcesForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"managedRoleBindingsForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"managedRoleBindingsForPrincipalHelper","parameterTypes":["jakarta.ws.rs.core.SecurityContext","org.apache.kafka.common.security.auth.KafkaPrincipal","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"rolebindingsForAllKnownClusters","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.utils.ClusterType"] }, {"name":"rolebindingsForPrincipalInScope","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"rolebindingsForPrincipalWithinScope","parameterTypes":["jakarta.ws.rs.core.SecurityContext","org.apache.kafka.common.security.auth.KafkaPrincipal","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"subClusterVisibility","parameterTypes":["java.lang.String","java.util.List","java.lang.String","java.util.Set","org.apache.kafka.common.security.auth.KafkaPrincipal"] }, {"name":"visibilityRequestToScopeList","parameterTypes":["io.confluent.rbacapi.entities.VisibilityRequest"] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1MetadataServiceResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"activeNodeWithSpecifiedProtocol","parameterTypes":["java.lang.String"] }, {"name":"getBackingKafkaClusterId","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1OperationsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"lookupPrincipalsWithRoleOnResource","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1PrincipalsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"addClusterRoleForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"addRoleResourcesForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.ResourcesRequest"] }, {"name":"deleteRoleForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"deleteRoleResourcesForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.ResourcesRequest"] }, {"name":"getRoleResourcesForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }, {"name":"setRoleResourcesForPrincipal","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","java.lang.String","io.confluent.rbacapi.entities.ResourcesRequest"] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1RolesResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"role","parameterTypes":["java.lang.String"] }, {"name":"roleNames","parameterTypes":[] }, {"name":"roles","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.resources.v1.V1UserGroupResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getUserGroupList","parameterTypes":["jakarta.ws.rs.core.SecurityContext","java.lang.String","io.confluent.rbacapi.entities.MdsScope"] }]
},
{
  "name":"io.confluent.rbacapi.services.MdsFeatures",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.TreeMap","java.util.TreeMap"] }]
},
{
  "name":"io.confluent.rbacapi.swagger.SwaggerFilesResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"staticResources","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.confluent.rbacapi.utils.ClusterType",
  "methods":[{"name":"fromString","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.confluent.rbacapi.validation.common.ValidPrincipal",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.common.ValidPrincipal$PrincipalValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.common.ValidResourceType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.common.ValidResourceType$ResourceTypeValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.common.ValidRole",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.common.ValidRole$RoleValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.MDSValidationConfigurationContextResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getContext","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidAuthorizeRequest",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidClusterInfoList",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidClusterInfoList$ClusterInfoListValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidMdsScope",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidMdsScope$MdsScopeValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidPatternType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidPatternType$PatternTypeValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidResourcePattern",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidResourcePattern$ResourcePatternValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidRoleResourceType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidRoleResourceType$RoleResourceTypeValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidScopeResourceType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"validationAppliesTo","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidScopeResourceType$ScopeResourceTypeValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidationUtil$ClusterInfoListHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidationUtil$MdsScopeHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidationUtil$PatternTypeHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidationUtil$ResourcePatternHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidationUtil$ResourceTypeHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidationUtil$RoleResourceTypeHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rbacapi.validation.v1.V1ValidationUtil$ScopeResourceTypeHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.rest.ApplicationServer",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.rest.annotations.PerformanceMetric",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.confluent.rest.entities.ErrorMessage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getErrorCode","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }]
},
{
  "name":"io.confluent.rest.errorhandlers.StackTraceErrorHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.rest.errorhandlers.jmx.StackTraceErrorHandlerMBean"
},
{
  "name":"io.confluent.rest.exceptions.ConstraintViolationExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toResponse","parameterTypes":["jakarta.validation.ConstraintViolationException"] }]
},
{
  "name":"io.confluent.rest.exceptions.DebuggableExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createResponse","parameterTypes":["java.lang.Throwable","int","jakarta.ws.rs.core.Response$StatusType","java.lang.String"] }, {"name":"toResponse","parameterTypes":["jakarta.ws.rs.WebApplicationException"] }]
},
{
  "name":"io.confluent.rest.exceptions.GenericExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"io.confluent.rest.exceptions.JsonMappingExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"sanitizeExceptionMessage","parameterTypes":["java.lang.String"] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.databind.JsonMappingException"] }]
},
{
  "name":"io.confluent.rest.exceptions.JsonParseExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.core.JsonParseException"] }]
},
{
  "name":"io.confluent.rest.exceptions.KafkaExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"errorMap","parameterTypes":[] }, {"name":"getResponse","parameterTypes":["java.lang.Throwable"] }, {"name":"getResponse","parameterTypes":["java.lang.Throwable","jakarta.ws.rs.core.Response$Status","int"] }, {"name":"handleException","parameterTypes":["java.lang.Throwable"] }, {"name":"toResponse","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"io.confluent.rest.exceptions.WebApplicationExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"negotiateContentType","parameterTypes":[] }, {"name":"toResponse","parameterTypes":["jakarta.ws.rs.WebApplicationException"] }]
},
{
  "name":"io.confluent.rest.jmx.ApplicationServerMBean"
},
{
  "name":"io.confluent.rest.metrics.MetricsResourceMethodApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"onEvent","parameterTypes":["org.glassfish.jersey.server.monitoring.ApplicationEvent"] }, {"name":"onRequest","parameterTypes":["org.glassfish.jersey.server.monitoring.RequestEvent"] }, {"name":"register","parameterTypes":["org.glassfish.jersey.server.model.ResourceMethod"] }]
},
{
  "name":"io.confluent.rest.validation.JacksonMessageBodyProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"hasMatchingMediaType","parameterTypes":["jakarta.ws.rs.core.MediaType"] }, {"name":"isApplicationOctetStream","parameterTypes":["jakarta.ws.rs.core.MediaType"] }, {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.InputStream"] }]
},
{
  "name":"io.confluent.security.audit.AclAuthorizationInfo",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.Address",
  "methods":[{"name":"getInternal","parameterTypes":[] }, {"name":"getIp","parameterTypes":[] }, {"name":"getIpBytes","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.Address$Builder",
  "methods":[{"name":"clearInternal","parameterTypes":[] }, {"name":"clearIp","parameterTypes":[] }, {"name":"clearPort","parameterTypes":[] }, {"name":"getInternal","parameterTypes":[] }, {"name":"getIp","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"setInternal","parameterTypes":["boolean"] }, {"name":"setIp","parameterTypes":["java.lang.String"] }, {"name":"setIpBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setPort","parameterTypes":["int"] }]
},
{
  "name":"io.confluent.security.audit.AuditLogEntry",
  "methods":[{"name":"getAuthenticationInfo","parameterTypes":[] }, {"name":"getAuthorizationInfo","parameterTypes":[] }, {"name":"getClientAddress","parameterTypes":["int"] }, {"name":"getClientAddressCount","parameterTypes":[] }, {"name":"getClientAddressList","parameterTypes":[] }, {"name":"getMethodName","parameterTypes":[] }, {"name":"getMethodNameBytes","parameterTypes":[] }, {"name":"getRequest","parameterTypes":[] }, {"name":"getRequestMetadata","parameterTypes":[] }, {"name":"getResourceName","parameterTypes":[] }, {"name":"getResourceNameBytes","parameterTypes":[] }, {"name":"getResult","parameterTypes":[] }, {"name":"getServiceName","parameterTypes":[] }, {"name":"getServiceNameBytes","parameterTypes":[] }, {"name":"hasAuthenticationInfo","parameterTypes":[] }, {"name":"hasAuthorizationInfo","parameterTypes":[] }, {"name":"hasRequest","parameterTypes":[] }, {"name":"hasRequestMetadata","parameterTypes":[] }, {"name":"hasResult","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.AuditLogEntry$Builder",
  "methods":[{"name":"addClientAddress","parameterTypes":["io.confluent.security.audit.Address"] }, {"name":"clearAuthenticationInfo","parameterTypes":[] }, {"name":"clearAuthorizationInfo","parameterTypes":[] }, {"name":"clearClientAddress","parameterTypes":[] }, {"name":"clearMethodName","parameterTypes":[] }, {"name":"clearRequest","parameterTypes":[] }, {"name":"clearRequestMetadata","parameterTypes":[] }, {"name":"clearResourceName","parameterTypes":[] }, {"name":"clearResult","parameterTypes":[] }, {"name":"clearServiceName","parameterTypes":[] }, {"name":"getAuthenticationInfo","parameterTypes":[] }, {"name":"getAuthenticationInfoBuilder","parameterTypes":[] }, {"name":"getAuthorizationInfo","parameterTypes":[] }, {"name":"getAuthorizationInfoBuilder","parameterTypes":[] }, {"name":"getClientAddress","parameterTypes":["int"] }, {"name":"getClientAddressBuilder","parameterTypes":["int"] }, {"name":"getClientAddressCount","parameterTypes":[] }, {"name":"getClientAddressList","parameterTypes":[] }, {"name":"getMethodName","parameterTypes":[] }, {"name":"getRequest","parameterTypes":[] }, {"name":"getRequestBuilder","parameterTypes":[] }, {"name":"getRequestMetadata","parameterTypes":[] }, {"name":"getRequestMetadataBuilder","parameterTypes":[] }, {"name":"getResourceName","parameterTypes":[] }, {"name":"getResult","parameterTypes":[] }, {"name":"getResultBuilder","parameterTypes":[] }, {"name":"getServiceName","parameterTypes":[] }, {"name":"hasAuthenticationInfo","parameterTypes":[] }, {"name":"hasAuthorizationInfo","parameterTypes":[] }, {"name":"hasRequest","parameterTypes":[] }, {"name":"hasRequestMetadata","parameterTypes":[] }, {"name":"hasResult","parameterTypes":[] }, {"name":"setAuthenticationInfo","parameterTypes":["io.confluent.security.audit.AuthenticationInfo"] }, {"name":"setAuthorizationInfo","parameterTypes":["io.confluent.security.audit.AuthorizationInfo"] }, {"name":"setClientAddress","parameterTypes":["int","io.confluent.security.audit.Address"] }, {"name":"setMethodName","parameterTypes":["java.lang.String"] }, {"name":"setMethodNameBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setRequest","parameterTypes":["com.google.protobuf.Struct"] }, {"name":"setRequestMetadata","parameterTypes":["com.google.protobuf.Struct"] }, {"name":"setResourceName","parameterTypes":["java.lang.String"] }, {"name":"setResourceNameBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setResult","parameterTypes":["io.confluent.security.audit.Result"] }, {"name":"setServiceName","parameterTypes":["java.lang.String"] }, {"name":"setServiceNameBytes","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"io.confluent.security.audit.AuthenticationInfo",
  "methods":[{"name":"getIdentity","parameterTypes":[] }, {"name":"getIdentityBytes","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"getPrincipal","parameterTypes":[] }, {"name":"getPrincipalBytes","parameterTypes":[] }, {"name":"getPrincipalResourceId","parameterTypes":[] }, {"name":"getPrincipalResourceIdBytes","parameterTypes":[] }, {"name":"hasMetadata","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.AuthenticationInfo$Builder",
  "methods":[{"name":"clearIdentity","parameterTypes":[] }, {"name":"clearMetadata","parameterTypes":[] }, {"name":"clearPrincipal","parameterTypes":[] }, {"name":"clearPrincipalResourceId","parameterTypes":[] }, {"name":"getIdentity","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"getMetadataBuilder","parameterTypes":[] }, {"name":"getPrincipal","parameterTypes":[] }, {"name":"getPrincipalResourceId","parameterTypes":[] }, {"name":"hasMetadata","parameterTypes":[] }, {"name":"setIdentity","parameterTypes":["java.lang.String"] }, {"name":"setIdentityBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setMetadata","parameterTypes":["io.confluent.security.audit.AuthenticationMetadata"] }, {"name":"setPrincipal","parameterTypes":["java.lang.String"] }, {"name":"setPrincipalBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setPrincipalResourceId","parameterTypes":["java.lang.String"] }, {"name":"setPrincipalResourceIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"io.confluent.security.audit.AuthenticationMetadata",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.AuthorizationInfo",
  "methods":[{"name":"getAclAuthorization","parameterTypes":[] }, {"name":"getAssignedPrincipals","parameterTypes":["int"] }, {"name":"getAssignedPrincipalsCount","parameterTypes":[] }, {"name":"getAssignedPrincipalsList","parameterTypes":[] }, {"name":"getAuthorizationCase","parameterTypes":[] }, {"name":"getGranted","parameterTypes":[] }, {"name":"getOperation","parameterTypes":[] }, {"name":"getOperationBytes","parameterTypes":[] }, {"name":"getPatternType","parameterTypes":[] }, {"name":"getPatternTypeBytes","parameterTypes":[] }, {"name":"getRbacAuthorization","parameterTypes":[] }, {"name":"getResourceName","parameterTypes":[] }, {"name":"getResourceNameBytes","parameterTypes":[] }, {"name":"getResourceType","parameterTypes":[] }, {"name":"getResourceTypeBytes","parameterTypes":[] }, {"name":"getSuperUserAuthorization","parameterTypes":[] }, {"name":"hasAclAuthorization","parameterTypes":[] }, {"name":"hasRbacAuthorization","parameterTypes":[] }, {"name":"hasSuperUserAuthorization","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.AuthorizationInfo$Builder",
  "methods":[{"name":"addAssignedPrincipals","parameterTypes":["java.lang.String"] }, {"name":"clearAclAuthorization","parameterTypes":[] }, {"name":"clearAssignedPrincipals","parameterTypes":[] }, {"name":"clearAuthorization","parameterTypes":[] }, {"name":"clearGranted","parameterTypes":[] }, {"name":"clearOperation","parameterTypes":[] }, {"name":"clearPatternType","parameterTypes":[] }, {"name":"clearRbacAuthorization","parameterTypes":[] }, {"name":"clearResourceName","parameterTypes":[] }, {"name":"clearResourceType","parameterTypes":[] }, {"name":"clearSuperUserAuthorization","parameterTypes":[] }, {"name":"getAclAuthorization","parameterTypes":[] }, {"name":"getAclAuthorizationBuilder","parameterTypes":[] }, {"name":"getAssignedPrincipals","parameterTypes":["int"] }, {"name":"getAssignedPrincipalsCount","parameterTypes":[] }, {"name":"getAssignedPrincipalsList","parameterTypes":[] }, {"name":"getAuthorizationCase","parameterTypes":[] }, {"name":"getGranted","parameterTypes":[] }, {"name":"getOperation","parameterTypes":[] }, {"name":"getPatternType","parameterTypes":[] }, {"name":"getRbacAuthorization","parameterTypes":[] }, {"name":"getRbacAuthorizationBuilder","parameterTypes":[] }, {"name":"getResourceName","parameterTypes":[] }, {"name":"getResourceType","parameterTypes":[] }, {"name":"getSuperUserAuthorization","parameterTypes":[] }, {"name":"hasAclAuthorization","parameterTypes":[] }, {"name":"hasRbacAuthorization","parameterTypes":[] }, {"name":"hasSuperUserAuthorization","parameterTypes":[] }, {"name":"setAclAuthorization","parameterTypes":["io.confluent.security.audit.AclAuthorizationInfo"] }, {"name":"setAssignedPrincipals","parameterTypes":["int","java.lang.String"] }, {"name":"setGranted","parameterTypes":["boolean"] }, {"name":"setOperation","parameterTypes":["java.lang.String"] }, {"name":"setOperationBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setPatternType","parameterTypes":["java.lang.String"] }, {"name":"setPatternTypeBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setRbacAuthorization","parameterTypes":["io.confluent.security.audit.RbacAuthorizationInfo"] }, {"name":"setResourceName","parameterTypes":["java.lang.String"] }, {"name":"setResourceNameBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setResourceType","parameterTypes":["java.lang.String"] }, {"name":"setResourceTypeBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setSuperUserAuthorization","parameterTypes":["boolean"] }]
},
{
  "name":"io.confluent.security.audit.AuthorizationScope",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getOuterScope","parameterTypes":["int"] }, {"name":"getOuterScopeCount","parameterTypes":[] }, {"name":"getOuterScopeList","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.AuthorizationScope$Builder",
  "methods":[{"name":"addOuterScope","parameterTypes":["java.lang.String"] }, {"name":"clearOuterScope","parameterTypes":[] }, {"name":"getOuterScope","parameterTypes":["int"] }, {"name":"getOuterScopeCount","parameterTypes":[] }, {"name":"getOuterScopeList","parameterTypes":[] }, {"name":"setOuterScope","parameterTypes":["int","java.lang.String"] }]
},
{
  "name":"io.confluent.security.audit.RbacAuthorizationInfo",
  "methods":[{"name":"getActingPrincipal","parameterTypes":[] }, {"name":"getActingPrincipalBytes","parameterTypes":[] }, {"name":"getRole","parameterTypes":[] }, {"name":"getRoleBytes","parameterTypes":[] }, {"name":"getScope","parameterTypes":[] }, {"name":"hasScope","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.RbacAuthorizationInfo$Builder",
  "methods":[{"name":"clearActingPrincipal","parameterTypes":[] }, {"name":"clearRole","parameterTypes":[] }, {"name":"clearScope","parameterTypes":[] }, {"name":"getActingPrincipal","parameterTypes":[] }, {"name":"getRole","parameterTypes":[] }, {"name":"getScope","parameterTypes":[] }, {"name":"getScopeBuilder","parameterTypes":[] }, {"name":"hasScope","parameterTypes":[] }, {"name":"setActingPrincipal","parameterTypes":["java.lang.String"] }, {"name":"setActingPrincipalBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setRole","parameterTypes":["java.lang.String"] }, {"name":"setRoleBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setScope","parameterTypes":["io.confluent.security.audit.AuthorizationScope"] }]
},
{
  "name":"io.confluent.security.audit.Result",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.telemetry.exporter.NonBlockingKafkaExporter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.audit.telemetry.exporter.TopicManager"
},
{
  "name":"io.confluent.security.audit.telemetry.exporter.TopicSpec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setConfig","parameterTypes":["java.util.Map"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPartitions","parameterTypes":["int"] }, {"name":"setReplicationFactor","parameterTypes":["int"] }]
},
{
  "name":"io.confluent.security.audit.telemetry.exporter.TopicSpec$Topics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setTopics","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.confluent.security.auth.store.data.AuthKey",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.security.auth.store.data.AuthValue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.security.auth.store.data.RoleBindingKey",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.kafka.common.security.auth.KafkaPrincipal","java.lang.String","io.confluent.security.authorizer.Scope"] }, {"name":"principal","parameterTypes":[] }, {"name":"role","parameterTypes":[] }, {"name":"scope","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.auth.store.data.RoleBindingValue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Collection"] }, {"name":"resources","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.auth.store.data.StatusKey",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["int"] }, {"name":"partition","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.auth.store.data.StatusValue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["io.confluent.security.store.MetadataStoreStatus","int","java.lang.Integer","java.lang.String"] }, {"name":"errorMessage","parameterTypes":[] }, {"name":"generationId","parameterTypes":[] }, {"name":"status","parameterTypes":[] }, {"name":"writerBrokerId","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.authorizer.ResourcePattern",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["io.confluent.security.roledefinitions.ResourceType","java.lang.String","org.apache.kafka.common.resource.PatternType"] }, {"name":"name","parameterTypes":[] }, {"name":"patternType","parameterTypes":[] }, {"name":"resourceType","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.authorizer.Scope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","java.util.Map"] }, {"name":"clusters","parameterTypes":[] }, {"name":"path","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.roledefinitions.AccessPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.Boolean","java.util.Collection"] }]
},
{
  "name":"io.confluent.security.roledefinitions.AccessPolicy$ResourceOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.util.Collection"] }]
},
{
  "name":"io.confluent.security.roledefinitions.BindingScopes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.LinkedHashMap"] }]
},
{
  "name":"io.confluent.security.roledefinitions.Operation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"io.confluent.security.roledefinitions.RbacQuotas$RbacQuota",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.security.roledefinitions.ResourceType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.util.List"] }]
},
{
  "name":"io.confluent.security.roledefinitions.Role",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","boolean","io.confluent.security.roledefinitions.RbacQuotas$RbacQuota","io.confluent.security.roledefinitions.AccessPolicy","java.util.List"] }]
},
{
  "name":"io.confluent.security.roledefinitions.Roles",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.confluent.security.store.MetadataStoreStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.security.store.kafka.coordinator.MetadataServiceAssignment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["short","short","java.util.Map","java.lang.String","io.confluent.security.store.kafka.coordinator.NodeMetadata"] }, {"name":"error","parameterTypes":[] }, {"name":"nodes","parameterTypes":[] }, {"name":"version","parameterTypes":[] }, {"name":"writerMemberId","parameterTypes":[] }, {"name":"writerNodeMetadata","parameterTypes":[] }]
},
{
  "name":"io.confluent.security.store.kafka.coordinator.NodeMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Collection"] }, {"name":"urls","parameterTypes":[] }]
},
{
  "name":"io.confluent.shaded.io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.shaded.io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.HashedWheelTimer",
  "fields":[{"name":"workerState"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.HashedWheelTimer$HashedWheelTimeout",
  "fields":[{"name":"state"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.confluent.shaded.io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
  "fields":[{"name":"droppedRecords"}, {"name":"head"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.confluent.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.confluent.telemetry.events.exporter.http.EventHttpExporter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.telemetry.events.exporter.kafka.RandomBrokerPartitionSubsetPartitioner",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.telemetry.provider.KafkaRestProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.telemetry.provider.KafkaServerProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.telemetry.reporter.TelemetryReporter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.telemetry.serde.OpenTelemetryMetricsSerde",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.tokenapi.errormappers.AuthenticationTokenExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["io.confluent.tokenapi.exceptions.AuthenticationTokenException"] }]
},
{
  "name":"io.confluent.tokenapi.resources.v1.V1TokenResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"clearToken","parameterTypes":[] }, {"name":"impersonateToken","parameterTypes":["jakarta.ws.rs.core.SecurityContext","jakarta.servlet.http.HttpServletRequest","java.util.List","io.confluent.common.security.auth.entity.ImpersonateTokenRequest"] }, {"name":"issueToken","parameterTypes":["jakarta.ws.rs.core.SecurityContext","jakarta.ws.rs.core.HttpHeaders","java.util.List"] }, {"name":"refreshToken","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.tokenapi.entities.RefreshTokenRequest"] }, {"name":"sanitizeToken","parameterTypes":["jakarta.ws.rs.core.SecurityContext","io.confluent.tokenapi.entities.SanitizeTokenRequest"] }]
},
{
  "name":"io.opentelemetry.api.incubator.trace.ExtendedDefaultTracerProvider",
  "methods":[{"name":"getNoop","parameterTypes":[] }]
},
{
  "name":"io.opentelemetry.instrumentation.log4j.appender.v2_17.OpenTelemetryAppender"
},
{
  "name":"io.opentelemetry.javaagent.bootstrap.internal.ConfiguredResourceAttributesHolder"
},
{
  "name":"io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdk"
},
{
  "name":"jakarta.activation.DataSource"
},
{
  "name":"jakarta.enterprise.inject.spi.BeanManager"
},
{
  "name":"jakarta.inject.Inject",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.inject.Named",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.inject.Singleton",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.Persistence"
},
{
  "name":"jakarta.servlet.Servlet"
},
{
  "name":"jakarta.servlet.SessionCookieConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.jmx.SessionCookieConfigMBean"
},
{
  "name":"jakarta.validation.Valid",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.validation.constraints.NotNull",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.websocket.WebSocketContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.websocket.jmx.WebSocketContainerMBean"
},
{
  "name":"jakarta.websocket.server.ServerContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.websocket.server.jmx.ServerContainerMBean"
},
{
  "name":"jakarta.ws.rs.Consumes",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.DELETE",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.GET",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.POST",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.PUT",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.Path",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.PathParam",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.Produces",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.container.ContainerRequestFilter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext"] }, {"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext","jakarta.ws.rs.container.ContainerResponseContext"] }]
},
{
  "name":"jakarta.ws.rs.container.ContainerResponseFilter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext"] }, {"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext","jakarta.ws.rs.container.ContainerResponseContext"] }]
},
{
  "name":"jakarta.ws.rs.container.DynamicFeature",
  "methods":[{"name":"configure","parameterTypes":["jakarta.ws.rs.container.ResourceInfo","jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"jakarta.ws.rs.container.Suspended",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.core.Application",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.ws.rs.core.Context",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.ws.rs.core.Feature",
  "methods":[{"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"jakarta.ws.rs.ext.ContextResolver",
  "methods":[{"name":"getContext","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"jakarta.ws.rs.ext.ExceptionMapper",
  "queryAllPublicMethods":true,
  "methods":[{"name":"createResponse","parameterTypes":["java.lang.Throwable","int","jakarta.ws.rs.core.Response$StatusType","java.lang.String"] }, {"name":"sanitizeExceptionMessage","parameterTypes":["java.lang.String"] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.core.JsonParseException"] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.core.JsonProcessingException"] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.databind.JsonMappingException"] }, {"name":"toResponse","parameterTypes":["com.fasterxml.jackson.databind.exc.PropertyBindingException"] }, {"name":"toResponse","parameterTypes":["io.confluent.crn.CrnSyntaxException"] }, {"name":"toResponse","parameterTypes":["io.confluent.kafkarest.exceptions.StatusCodeException"] }, {"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.EncryptionFailedException"] }, {"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.IdpAuthException"] }, {"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.InvalidCodeException"] }, {"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.InvalidDeviceKeyException"] }, {"name":"toResponse","parameterTypes":["io.confluent.oidc.exceptions.InvalidStateException"] }, {"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryConflictException"] }, {"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryGenericClientErrorException"] }, {"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryNoAccessException"] }, {"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryNotFoundException"] }, {"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryUpdateException"] }, {"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.ClusterRegistryVerifyException"] }, {"name":"toResponse","parameterTypes":["io.confluent.rbacapi.exceptions.DeletedNonexistentResourceException"] }, {"name":"toResponse","parameterTypes":["io.confluent.tokenapi.exceptions.AuthenticationTokenException"] }, {"name":"toResponse","parameterTypes":["jakarta.validation.ConstraintViolationException"] }, {"name":"toResponse","parameterTypes":["jakarta.validation.ValidationException"] }, {"name":"toResponse","parameterTypes":["jakarta.ws.rs.ClientErrorException"] }, {"name":"toResponse","parameterTypes":["java.lang.Exception"] }, {"name":"toResponse","parameterTypes":["java.lang.Throwable"] }, {"name":"toResponse","parameterTypes":["java.util.concurrent.ExecutionException"] }, {"name":"toResponse","parameterTypes":["java.util.concurrent.TimeoutException"] }, {"name":"toResponse","parameterTypes":["org.apache.kafka.common.errors.ApiException"] }, {"name":"toResponse","parameterTypes":["org.apache.kafka.common.errors.ClusterLinkDisabledException"] }, {"name":"toResponse","parameterTypes":["org.apache.kafka.common.errors.ClusterLinkInUseException"] }, {"name":"toResponse","parameterTypes":["org.glassfish.jersey.server.ParamException"] }]
},
{
  "name":"jakarta.ws.rs.ext.MessageBodyReader",
  "queryAllPublicMethods":true,
  "methods":[{"name":"addUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"checkCanDeserialize","parameterTypes":["boolean"] }, {"name":"checkCanSerialize","parameterTypes":["boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","boolean"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"getSize","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"isEnabled","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"isReadable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"isWriteable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"locateMapper","parameterTypes":["java.lang.Class","jakarta.ws.rs.core.MediaType"] }, {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.InputStream"] }, {"name":"removeUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"setAnnotationsToUse","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.Annotations[]"] }, {"name":"setDefaultReadView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultWriteView","parameterTypes":["java.lang.Class"] }, {"name":"setMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"version","parameterTypes":[] }, {"name":"writeTo","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.OutputStream"] }]
},
{
  "name":"jakarta.ws.rs.ext.MessageBodyWriter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"addUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"checkCanDeserialize","parameterTypes":["boolean"] }, {"name":"checkCanSerialize","parameterTypes":["boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature","boolean"] }, {"name":"configure","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","boolean"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"disable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.core.JsonParser$Feature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.DeserializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.databind.SerializationFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"enable","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature","com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature[]"] }, {"name":"getSize","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"isEnabled","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.JakartaRSFeature"] }, {"name":"isReadable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"isWriteable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType"] }, {"name":"locateMapper","parameterTypes":["java.lang.Class","jakarta.ws.rs.core.MediaType"] }, {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.InputStream"] }, {"name":"removeUntouchable","parameterTypes":["java.lang.Class"] }, {"name":"setAnnotationsToUse","parameterTypes":["com.fasterxml.jackson.jakarta.rs.cfg.Annotations[]"] }, {"name":"setDefaultReadView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultView","parameterTypes":["java.lang.Class"] }, {"name":"setDefaultWriteView","parameterTypes":["java.lang.Class"] }, {"name":"setMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"version","parameterTypes":[] }, {"name":"writeTo","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","jakarta.ws.rs.core.MediaType","jakarta.ws.rs.core.MultivaluedMap","java.io.OutputStream"] }]
},
{
  "name":"jakarta.ws.rs.ext.ParamConverterProvider",
  "methods":[{"name":"getConverter","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]"] }]
},
{
  "name":"jakarta.ws.rs.ext.WriterInterceptor",
  "methods":[{"name":"aroundWriteTo","parameterTypes":["jakarta.ws.rs.ext.WriterInterceptorContext"] }]
},
{
  "name":"java.awt.image.RenderedImage"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.io.jmx.CloseableMBean"
},
{
  "name":"java.io.jmx.SerializableMBean"
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Class",
  "methods":[{"name":"getModule","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassValue"
},
{
  "name":"java.lang.Cloneable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "methods":[{"name":"isNamed","parameterTypes":[] }]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Runnable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"fromString","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.System",
  "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}],
  "methods":[{"name":"isVirtual","parameterTypes":[] }, {"name":"ofVirtual","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread$Builder",
  "methods":[{"name":"factory","parameterTypes":[] }]
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.invoke.VarHandle",
  "methods":[{"name":"releaseFence","parameterTypes":[] }]
},
{
  "name":"java.lang.jmx.AutoCloseableMBean"
},
{
  "name":"java.lang.jmx.CloneableMBean"
},
{
  "name":"java.lang.jmx.ComparableMBean"
},
{
  "name":"java.lang.jmx.IterableMBean"
},
{
  "name":"java.lang.jmx.RunnableMBean"
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, {"name":"getLoggerNames","parameterTypes":[] }, {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getUptime","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.URL",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"MAX_MEMORY"}, {"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","long"] }]
},
{
  "name":"java.nio.channels.Channel",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.nio.channels.InterruptibleChannel",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.nio.channels.NetworkChannel",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.nio.channels.SelectableChannel",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.nio.channels.jmx.ChannelMBean"
},
{
  "name":"java.nio.channels.jmx.InterruptibleChannelMBean"
},
{
  "name":"java.nio.channels.jmx.NetworkChannelMBean"
},
{
  "name":"java.nio.channels.jmx.SelectableChannelMBean"
},
{
  "name":"java.nio.channels.jmx.ServerSocketChannelMBean"
},
{
  "name":"java.nio.channels.spi.AbstractInterruptibleChannel",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.nio.channels.spi.AbstractSelectableChannel",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.nio.channels.spi.jmx.AbstractInterruptibleChannelMBean"
},
{
  "name":"java.nio.channels.spi.jmx.AbstractSelectableChannelMBean"
},
{
  "name":"java.rmi.Remote",
  "queryAllPublicMethods":true
},
{
  "name":"java.rmi.registry.Registry",
  "queryAllPublicMethods":true
},
{
  "name":"java.security.AccessControlContext"
},
{
  "name":"java.security.AccessController",
  "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedAction"] }, {"name":"getContext","parameterTypes":[] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.interfaces.DSAPrivateKey"
},
{
  "name":"java.security.interfaces.DSAPublicKey"
},
{
  "name":"java.security.interfaces.ECPrivateKey"
},
{
  "name":"java.security.interfaces.ECPublicKey"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.security.spec.DSAParameterSpec"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Time"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Collection",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.HashMap$HashIterator"
},
{
  "name":"java.util.HashMap$ValueIterator"
},
{
  "name":"java.util.HashSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.List",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"fromString","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.util.Map",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.NavigableMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.NavigableSet",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.RandomAccess",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.SequencedCollection",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.SequencedMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.SequencedSet",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Set",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.SortedMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.SortedSet",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.TreeMap",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.CompletableFuture"
},
{
  "name":"java.util.concurrent.CompletableFuture$BiApply"
},
{
  "name":"java.util.concurrent.CompletableFuture$UniWhenComplete"
},
{
  "name":"java.util.concurrent.CopyOnWriteArrayList",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.Executor",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.Executors",
  "methods":[{"name":"newThreadPerTaskExecutor","parameterTypes":["java.util.concurrent.ThreadFactory"] }]
},
{
  "name":"java.util.concurrent.Executors$RunnableAdapter"
},
{
  "name":"java.util.concurrent.Flow$Subscriber"
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.FutureTask"
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor$Worker"
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicMarkableReference",
  "fields":[{"name":"pair"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64$Cell",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.jmx.CopyOnWriteArrayListMBean"
},
{
  "name":"java.util.concurrent.jmx.ExecutorMBean"
},
{
  "name":"java.util.concurrent.jmx.ThreadFactoryMBean"
},
{
  "name":"java.util.jmx.CollectionMBean"
},
{
  "name":"java.util.jmx.EventListenerMBean"
},
{
  "name":"java.util.jmx.ListMBean"
},
{
  "name":"java.util.jmx.RandomAccessMBean"
},
{
  "name":"java.util.jmx.SequencedCollectionMBean"
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"javafx.beans.value.ObservableValue"
},
{
  "name":"javassist.util.proxy.MethodHandler"
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.StandardEmitterMBean",
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }]
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.management.remote.rmi.RMIServer",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getVersion","parameterTypes":[] }, {"name":"newClient","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"javax.management.remote.rmi.RMIServerImpl_Skel"
},
{
  "name":"javax.management.remote.rmi.RMIServerImpl_Stub",
  "methods":[{"name":"<init>","parameterTypes":["java.rmi.server.RemoteRef"] }]
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.security.auth.Subject",
  "methods":[{"name":"callAs","parameterTypes":["javax.security.auth.Subject","java.util.concurrent.Callable"] }, {"name":"current","parameterTypes":[] }, {"name":"doAs","parameterTypes":["javax.security.auth.Subject","java.security.PrivilegedExceptionAction"] }, {"name":"getSubject","parameterTypes":["java.security.AccessControlContext"] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.servlet.Servlet"
},
{
  "name":"javax.xml.transform.Source"
},
{
  "name":"javax.xml.transform.dom.DOMSource"
},
{
  "name":"javax.xml.transform.sax.SAXSource"
},
{
  "name":"javax.xml.transform.stream.StreamSource"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }, {"name":"getNotificationInfo","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"kafka.durability.audit.manager.DurabilityAuditCheck$",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"ChecksumAudit","parameterTypes":[] }, {"name":"CompactTopicAudit","parameterTypes":[] }, {"name":"DeepCompactTopicAudit","parameterTypes":[] }, {"name":"DeepOffsetScan","parameterTypes":[] }, {"name":"MirrorTopicAudit","parameterTypes":[] }, {"name":"PeriodicalAudit","parameterTypes":[] }, {"name":"StoreOffsetMapInTierStore","parameterTypes":[] }]
},
{
  "name":"kafka.durability.events.DurabilityEventType$",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"ClusterLinkTruncationType","parameterTypes":[] }, {"name":"DeletePartitionType","parameterTypes":[] }, {"name":"DeleteRecordsType","parameterTypes":[] }, {"name":"DestLogEpochChangeType","parameterTypes":[] }, {"name":"EpochChangeType","parameterTypes":[] }, {"name":"HealthCheckType","parameterTypes":[] }, {"name":"InjectStateType","parameterTypes":[] }, {"name":"IsrExpandType","parameterTypes":[] }, {"name":"KRaftHWMChangeType","parameterTypes":[] }, {"name":"KRaftLeaderChangeType","parameterTypes":[] }, {"name":"KRaftLogSnapshotGenerationType","parameterTypes":[] }, {"name":"KRaftLogStartOffsetChangeType","parameterTypes":[] }, {"name":"KRaftNodeStartUpType","parameterTypes":[] }, {"name":"MirrorStateChangeType","parameterTypes":[] }, {"name":"OffsetChangeType","parameterTypes":[] }, {"name":"RetentionChangeType","parameterTypes":[] }, {"name":"StartOffsetChangeType","parameterTypes":[] }]
},
{
  "name":"kafka.utils.Log4jController",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"kafka.utils.Log4jControllerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"libcore.io.Memory"
},
{
  "name":"net.jpountz.lz4.LZ4HCJNICompressor",
  "fields":[{"name":"INSTANCE"}],
  "methods":[{"name":"<init>","parameterTypes":["int"] }]
},
{
  "name":"net.jpountz.lz4.LZ4JNICompressor",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"net.jpountz.lz4.LZ4JNIFastDecompressor",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"net.jpountz.lz4.LZ4JNISafeDecompressor",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"net.jpountz.xxhash.StreamingXXHash32JNI$Factory",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"net.jpountz.xxhash.StreamingXXHash64JNI$Factory",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"net.jpountz.xxhash.XXHash32JNI",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"net.jpountz.xxhash.XXHash64JNI",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.HdrHistogram.AbstractHistogram",
  "fields":[{"name":"maxValue"}, {"name":"minNonZeroValue"}]
},
{
  "name":"org.HdrHistogram.AtomicHistogram",
  "fields":[{"name":"totalCount"}]
},
{
  "name":"org.HdrHistogram.WriterReaderPhaser",
  "fields":[{"name":"evenEndEpoch"}, {"name":"oddEndEpoch"}, {"name":"startEpoch"}]
},
{
  "name":"org.apache.kafka.clients.DefaultHostResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.admin.AlterConfigsOptions",
  "methods":[{"name":"skipMirrorTopicConfigValidation","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.admin.AlterConfigsResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.kafka.common.KafkaFuture"] }]
},
{
  "name":"org.apache.kafka.clients.admin.AlterMirrorOp",
  "methods":[{"name":"isMakeMirrorOp","parameterTypes":[] }, {"name":"needsAlterMirrorsOnKRaftController","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.admin.CreateAclsResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.CreatePartitionsResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.CreateTopicsResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.DeleteAclsResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.DescribeClusterResult",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.kafka.common.KafkaFuture","org.apache.kafka.common.KafkaFuture","org.apache.kafka.common.KafkaFuture","org.apache.kafka.common.KafkaFuture"] }]
},
{
  "name":"org.apache.kafka.clients.admin.DescribeTopicsResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map","java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.KafkaAdminClient",
  "methods":[{"name":"convertToPausePendingMirrors","parameterTypes":["java.util.Map","java.util.Map","java.util.Map","java.util.Map"] }, {"name":"convertToPendingRestoreMirrors","parameterTypes":["java.util.Map"] }, {"name":"convertToStartPendingMirrors","parameterTypes":["java.util.Map","java.util.Map","java.util.Map","java.util.Map"] }, {"name":"createInternal","parameterTypes":["org.apache.kafka.clients.admin.AdminClientConfig","org.apache.kafka.clients.admin.internals.AdminMetadataManager","org.apache.kafka.clients.KafkaClient","org.apache.kafka.common.utils.Time","org.apache.kafka.clients.admin.internals.AdminRequestInterceptor$Factory"] }, {"name":"createInternalWithCallback","parameterTypes":["org.apache.kafka.clients.admin.AdminClientConfig","org.apache.kafka.common.network.RequestCallback","org.apache.kafka.common.network.ProxyProtocolEngineFactory"] }, {"name":"deleteAcls","parameterTypes":["java.util.Collection","org.apache.kafka.clients.admin.DeleteAclsOptions","org.apache.kafka.common.acl.AclState"] }, {"name":"describeAcls","parameterTypes":["org.apache.kafka.common.acl.AclBindingFilter","org.apache.kafka.clients.admin.DescribeAclsOptions","org.apache.kafka.common.acl.AclState"] }, {"name":"failMirrors","parameterTypes":["java.util.Map"] }, {"name":"initiateReverseConnections","parameterTypes":["org.apache.kafka.common.message.InitiateReverseConnectionsRequestData","java.lang.Integer"] }, {"name":"offsetsForLeaderEpoch","parameterTypes":["java.util.Collection","org.apache.kafka.clients.admin.internals.OffsetForLeaderEpochOptions"] }, {"name":"reportClusterLinkStatus","parameterTypes":["java.lang.Integer","java.util.Collection","org.apache.kafka.clients.admin.ReportClusterLinkStatusOptions"] }, {"name":"stopMirrors","parameterTypes":["java.util.Map","java.util.Map","java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.KafkaAdminClient$8"
},
{
  "name":"org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable"
},
{
  "name":"org.apache.kafka.clients.admin.KafkaAdminClient$Call"
},
{
  "name":"org.apache.kafka.clients.admin.KafkaAdminClient$TimeoutProcessor"
},
{
  "name":"org.apache.kafka.clients.admin.ListConsumerGroupOffsetsResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.admin.ListConsumerGroupsResult",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.kafka.common.KafkaFuture"] }]
},
{
  "name":"org.apache.kafka.clients.admin.ListTopicsResult",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.kafka.common.KafkaFuture"] }]
},
{
  "name":"org.apache.kafka.clients.admin.OffsetSpec$TimestampSpec",
  "methods":[{"name":"timestamp","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.admin.ReportClusterLinkStatusResult",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.consumer.RangeAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.config.AbstractConfig",
  "fields":[{"name":"doLog"}]
},
{
  "name":"org.apache.kafka.common.config.internals.ConfluentConfigs",
  "fields":[{"name":"BALANCER_TOPICS_REPLICATION_FACTOR_CONFIG"}],
  "methods":[{"name":"clientConfigsForEndpoint","parameterTypes":["java.util.Map","org.apache.kafka.common.Endpoint"] }]
},
{
  "name":"org.apache.kafka.common.internals.KafkaCompletableFuture"
},
{
  "name":"org.apache.kafka.common.internals.KafkaFutureImpl"
},
{
  "name":"org.apache.kafka.common.metrics.JmxReporter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.metrics.KafkaMetric",
  "fields":[{"name":"metricValueProvider"}]
},
{
  "name":"org.apache.kafka.common.metrics.Metrics",
  "methods":[{"name":"registerEmitWhenNonDefaultMetricSensor","parameterTypes":["java.lang.String","org.apache.kafka.common.MetricName","org.apache.kafka.common.metrics.MetricConfig","java.util.function.Supplier","java.lang.Double"] }, {"name":"removeEmitWhenNonDefaultMetricSensor","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.kafka.common.requests.DetailedRequestAuditLogFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.requests.SamplingRequestLogFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.resource.PatternType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.kafka.common.security.authenticator.AbstractLogin$DefaultLoginCallbackHandler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.authenticator.DefaultLogin",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallbackHandler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer$OAuthBearerSaslServerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.plain.PlainLoginModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.security.plain.internals.PlainSaslServer$PlainSaslServerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.serialization.ByteArrayDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.serialization.ByteArraySerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfo",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.server.interceptor.DefaultBrokerInterceptor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.server.metrics.ClientTopicMetricsManager$NoOpClientTopicMetricsManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.server.metrics.KafkaYammerMetrics",
  "methods":[{"name":"defaultRegistry","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.storage.internals.checkpoint.CleanShutdownFileHandler$Content",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.log4j.builders.appender.AsyncAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.ConsoleAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.DailyRollingFileAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.EnhancedRollingFileAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.FileAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.NullAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.RewriteAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.RollingFileAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.SocketAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.appender.SyslogAppenderBuilder"
},
{
  "name":"org.apache.log4j.builders.filter.DenyAllFilterBuilder"
},
{
  "name":"org.apache.log4j.builders.filter.LevelMatchFilterBuilder"
},
{
  "name":"org.apache.log4j.builders.filter.LevelRangeFilterBuilder"
},
{
  "name":"org.apache.log4j.builders.filter.StringMatchFilterBuilder"
},
{
  "name":"org.apache.log4j.builders.layout.HtmlLayoutBuilder"
},
{
  "name":"org.apache.log4j.builders.layout.PatternLayoutBuilder"
},
{
  "name":"org.apache.log4j.builders.layout.SimpleLayoutBuilder"
},
{
  "name":"org.apache.log4j.builders.layout.TTCCLayoutBuilder"
},
{
  "name":"org.apache.log4j.builders.layout.XmlLayoutBuilder"
},
{
  "name":"org.apache.log4j.builders.rolling.CompositeTriggeringPolicyBuilder"
},
{
  "name":"org.apache.log4j.builders.rolling.SizeBasedTriggeringPolicyBuilder"
},
{
  "name":"org.apache.log4j.builders.rolling.TimeBasedRollingPolicyBuilder"
},
{
  "name":"org.apache.log4j.config.PropertiesConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.log4j.layout.Log4j1SyslogLayout"
},
{
  "name":"org.apache.log4j.layout.Log4j1XmlLayout"
},
{
  "name":"org.apache.log4j.pattern.Log4j1LevelPatternConverter"
},
{
  "name":"org.apache.log4j.pattern.Log4j1MdcPatternConverter"
},
{
  "name":"org.apache.log4j.pattern.Log4j1NdcPatternConverter"
},
{
  "name":"org.apache.log4j.xml.XmlConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.LogManager"
},
{
  "name":"org.apache.logging.log4j.Logger"
},
{
  "name":"org.apache.logging.log4j.core.appender.AbstractAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AppenderSet"
},
{
  "name":"org.apache.logging.log4j.core.appender.AsyncAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.ConsoleAppender",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.appender.ConsoleAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.CountingNoOpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.FailoverAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.FailoversPlugin"
},
{
  "name":"org.apache.logging.log4j.core.appender.FileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.HttpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.MemoryMappedFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.NullAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.OutputStreamAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RandomAccessFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RollingFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.ScriptAppenderSelector"
},
{
  "name":"org.apache.logging.log4j.core.appender.SmtpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.SocketAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.SyslogAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.WriterAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.ColumnMapping"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.JmsAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.nosql.NoSqlAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.RewriteAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.DeleteAction"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAll"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAny"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfFileName"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfLastModified"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfNot"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.Route"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.Routes"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.RoutingAppender"
},
{
  "name":"org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncLoggerConfig"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncWaitStrategyFactoryConfig"
},
{
  "name":"org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.LinkedTransferQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.config.AppenderControlArraySet",
  "fields":[{"name":"appenderArray"}]
},
{
  "name":"org.apache.logging.log4j.core.config.AppenderRef",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createAppenderRef","parameterTypes":["java.lang.String","org.apache.logging.log4j.Level","org.apache.logging.log4j.core.Filter"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.AppendersPlugin",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createAppenders","parameterTypes":["org.apache.logging.log4j.core.Appender[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.CustomLevelConfig"
},
{
  "name":"org.apache.logging.log4j.core.config.CustomLevels"
},
{
  "name":"org.apache.logging.log4j.core.config.DefaultAdvertiser"
},
{
  "name":"org.apache.logging.log4j.core.config.HttpWatcher"
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$RootLogger",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newRootBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$RootLogger$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.config.LoggersPlugin",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createLoggers","parameterTypes":["org.apache.logging.log4j.core.config.LoggerConfig[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.PropertiesPlugin"
},
{
  "name":"org.apache.logging.log4j.core.config.Property"
},
{
  "name":"org.apache.logging.log4j.core.config.ScriptsPlugin"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.ClassArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.DefaultArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.EnvironmentArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.ScriptArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.SelectArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.SystemPropertyArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.json.JsonConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.validation.validators.RequiredValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginConfigurationVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginElementVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.filter.AbstractFilterable$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.filter.BurstFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.CompositeFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.DenyAllFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.DynamicThresholdFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.LevelMatchFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.LevelRangeFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MarkerFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MutableThreadContextMapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.NoMarkerFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.RegexFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ScriptFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.StringMatchFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.StructuredDataFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ThreadContextMapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ThresholdFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.TimeFilter"
},
{
  "name":"org.apache.logging.log4j.core.layout.CsvLogEventLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.CsvParameterLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.GelfLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.HtmlLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.JsonLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.LevelPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.LoggerFields"
},
{
  "name":"org.apache.logging.log4j.core.layout.MarkerPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.MessageLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternLayout",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternLayout$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternMatch"
},
{
  "name":"org.apache.logging.log4j.core.layout.Rfc5424Layout"
},
{
  "name":"org.apache.logging.log4j.core.layout.ScriptPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.SerializedLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.SyslogLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.XmlLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.YamlLayout"
},
{
  "name":"org.apache.logging.log4j.core.lookup.ContextMapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.DateLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.EnvironmentLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.EventLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JavaLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JndiLookup"
},
{
  "name":"org.apache.logging.log4j.core.lookup.Log4jLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.LowerLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MainMapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MarkerLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.StructuredDataLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.UpperLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.net.MulticastDnsAdvertiser"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketAddress"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketOptions"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketPerformancePreferences"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.SslConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ClassNamePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.DatePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.EncodingPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EqualsReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FileDatePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FileLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FullLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.HighlightConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.IntegerPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LevelPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.LineLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LoggerPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.MapPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MarkerPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MaxLengthConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MdcPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MessagePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["org.apache.logging.log4j.core.config.Configuration","java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.NanoTimePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.NdcPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RegexReplacement"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RegexReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RepeatPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.StyleConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.UuidPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.script.Script"
},
{
  "name":"org.apache.logging.log4j.core.script.ScriptFile"
},
{
  "name":"org.apache.logging.log4j.core.script.ScriptRef"
},
{
  "name":"org.apache.logging.log4j.core.util.KeyValuePair"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.JsonTemplateLayout"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.CaseConverterResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.CounterResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.EndOfBatchResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.EventAdditionalFieldInterceptor"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.EventRootObjectKeyInterceptor"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ExceptionResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ExceptionRootCauseResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.LevelResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.LoggerResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MainMapResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MapResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MarkerResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MessageParameterResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MessageResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.PatternResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.SourceResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ThreadContextDataResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ThreadContextStackResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ThreadResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.TimestampResolverFactory"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.util.RecyclerFactoryConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.spi.AbstractLogger"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.BaseHolder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.DefaultServlet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jetty.ee10.servlet.FilterHolder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.FilterMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.Holder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletContainerInitializerHolder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletContextHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletContainerInitializerCaller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletContainerInitializerStarter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletHolder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.SessionHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.SessionHandler$CookieConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.BaseHolderMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.FilterHolderMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.FilterMappingMBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.HolderMBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.ServletContainerInitializerHolderMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.ServletContextHandler$ServletContainerInitializerCallerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.ServletContextHandler$ServletContainerInitializerStarterMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.ServletContextHandlerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.ServletHandlerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.ServletHolderMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.ServletMappingMBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.SessionHandler$CookieConfigMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.jmx.SessionHandlerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.security.ConstraintAware",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.security.ConstraintSecurityHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.servlet.security.jmx.ConstraintAwareMBean"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.security.jmx.ConstraintSecurityHandlerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.client.JakartaWebSocketClientContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.client.jmx.JakartaWebSocketClientContainerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.common.JakartaWebSocketContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.common.JakartaWebSocketSession",
  "methods":[{"name":"filterReturnType","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.common.JakartaWebSocketSessionListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.common.SessionTracker",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.common.jmx.JakartaWebSocketContainerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.common.jmx.JakartaWebSocketSessionListenerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.common.jmx.SessionTrackerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.server.JakartaWebSocketServerContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.server.JakartaWebSocketServerContainer$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.server.jmx.JakartaWebSocketServerContainer$1MBean"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.server.jmx.JakartaWebSocketServerContainerMBean"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.servlet.WebSocketUpgradeFilter$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.ee10.websocket.servlet.jmx.WebSocketUpgradeFilter$1MBean"
},
{
  "name":"org.eclipse.jetty.http.ComplianceViolation$Mode",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.http.HttpCompliance",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.http.jmx.ComplianceViolation$ModeMBean"
},
{
  "name":"org.eclipse.jetty.http.jmx.HttpComplianceMBean"
},
{
  "name":"org.eclipse.jetty.http.pathmap.PathSpecSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jetty.http2.server.AbstractHTTP2ServerConnectionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.http2.server.AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.http2.server.HTTP2ServerConnectionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.http2.server.jmx.AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainerMBean"
},
{
  "name":"org.eclipse.jetty.http2.server.jmx.AbstractHTTP2ServerConnectionFactoryMBean"
},
{
  "name":"org.eclipse.jetty.http2.server.jmx.HTTP2CServerConnectionFactoryMBean"
},
{
  "name":"org.eclipse.jetty.http2.server.jmx.HTTP2ServerConnectionFactoryMBean"
},
{
  "name":"org.eclipse.jetty.io.ArrayByteBufferPool",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.io.ByteBufferPool",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.io.Connection$Listener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.io.ManagedSelector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.io.ManagedSelector$SelectorProducer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.io.SelectorManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.io.jmx.ArrayByteBufferPoolMBean"
},
{
  "name":"org.eclipse.jetty.io.jmx.ByteBufferPoolMBean"
},
{
  "name":"org.eclipse.jetty.io.jmx.Connection$ListenerMBean"
},
{
  "name":"org.eclipse.jetty.io.jmx.ManagedSelector$SelectorProducerMBean"
},
{
  "name":"org.eclipse.jetty.io.jmx.ManagedSelectorMBean"
},
{
  "name":"org.eclipse.jetty.io.jmx.SelectorManagerMBean"
},
{
  "name":"org.eclipse.jetty.jmx.MBeanContainer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.jmx.jmx.MBeanContainerMBean"
},
{
  "name":"org.eclipse.jetty.security.AbstractLoginService",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.AuthenticationState",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.AuthenticationState$Deferred",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.Authenticator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.Authenticator$Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.DefaultIdentityService",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.IdentityService",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.LoginService",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.SecurityHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.authentication.LoginAuthenticator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.authentication.jmx.LoginAuthenticatorMBean"
},
{
  "name":"org.eclipse.jetty.security.internal.DeferredAuthenticationState",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.security.internal.jmx.DeferredAuthenticationStateMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.AbstractLoginServiceMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.AuthenticationState$DeferredMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.AuthenticationStateMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.Authenticator$ConfigurationMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.AuthenticatorMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.DefaultIdentityServiceMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.IdentityServiceMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.LoginServiceMBean"
},
{
  "name":"org.eclipse.jetty.security.jmx.SecurityHandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.AbstractConnectionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.AbstractConnector",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.AbstractNetworkConnector",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.AliasCheck",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.AllowedResourceAliasChecker",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.AllowedResourceAliasChecker$AllowedResourceAliasCheckListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.ConnectionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.ConnectionFactory$Upgrading",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Connector",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.CustomRequestLog",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"append","parameterTypes":["java.lang.String","java.lang.StringBuilder"] }, {"name":"logBytesSent","parameterTypes":["java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logClientHost","parameterTypes":["java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logLatencyMilliseconds","parameterTypes":["java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logNothing","parameterTypes":["java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logRequestAttribute","parameterTypes":["java.lang.String","java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logRequestAuthentication","parameterTypes":["java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logRequestFirstLine","parameterTypes":["java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logRequestHeader","parameterTypes":["java.lang.String","java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logRequestTime","parameterTypes":["org.eclipse.jetty.util.DateCache","java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }, {"name":"logResponseStatus","parameterTypes":["java.lang.StringBuilder","org.eclipse.jetty.server.Request","org.eclipse.jetty.server.Response"] }]
},
{
  "name":"org.eclipse.jetty.server.Handler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Handler$Abstract",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Handler$AbstractContainer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.Handler$Collection",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Handler$Container",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Handler$Sequence",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Handler$Singleton",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Handler$Wrapper",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.HttpConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.HttpConfiguration$ConnectionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.HttpConnectionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.NegotiatingServerConnection$CipherDiscriminator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.NetworkConnector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.NetworkTrafficServerConnector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Request$AuthenticationState",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Request$Handler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.RequestLog",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.Server",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.ServerConnector",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.ServerConnector$ServerConnectorManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.SymlinkAllowedResourceAliasChecker",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.ContextHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.ContextHandlerCollection",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.DefaultHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.ErrorHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.EventsHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.StatisticsHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.gzip.GzipFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.gzip.GzipHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.server.handler.gzip.jmx.GzipFactoryMBean"
},
{
  "name":"org.eclipse.jetty.server.handler.gzip.jmx.GzipHandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.handler.jmx.ContextHandlerCollectionMBean"
},
{
  "name":"org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.server.handler.jmx.DefaultHandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.handler.jmx.ErrorHandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.handler.jmx.EventsHandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.handler.jmx.StatisticsHandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.AbstractConnectionFactoryMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.AbstractConnectorMBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.server.jmx.AbstractNetworkConnectorMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.AliasCheckMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.AllowedResourceAliasChecker$AllowedResourceAliasCheckListenerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.AllowedResourceAliasCheckerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.ConnectionFactory$UpgradingMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.ConnectionFactoryMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.ConnectorMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.CustomRequestLogMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Handler$AbstractContainerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Handler$AbstractMBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.server.jmx.Handler$CollectionMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Handler$ContainerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Handler$SequenceMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Handler$SingletonMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Handler$WrapperMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.HandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.HttpConfiguration$ConnectionFactoryMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.HttpConfigurationMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.HttpConnectionFactoryMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.NegotiatingServerConnection$CipherDiscriminatorMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.NetworkConnectorMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.NetworkTrafficServerConnectorMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Request$AuthenticationStateMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.Request$HandlerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.RequestLogMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.ServerConnector$ServerConnectorManagerMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.ServerConnectorMBean"
},
{
  "name":"org.eclipse.jetty.server.jmx.ServerMBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.eclipse.jetty.server.jmx.SymlinkAllowedResourceAliasCheckerMBean"
},
{
  "name":"org.eclipse.jetty.session.AbstractSessionCache",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.AbstractSessionDataStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.AbstractSessionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.session.DefaultSessionCache",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.DefaultSessionIdManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.HouseKeeper",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.NullSessionDataStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.SessionCache",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.SessionConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.session.SessionConfig$Mutable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.SessionDataMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.SessionDataStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.SessionIdManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.SessionManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.session.jmx.AbstractSessionCacheMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.AbstractSessionDataStoreMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.AbstractSessionManagerMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.DefaultSessionCacheMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.DefaultSessionIdManagerMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.HouseKeeperMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.NullSessionDataStoreMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.SessionCacheMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.SessionConfig$MutableMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.SessionConfigMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.SessionDataMapMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.SessionDataStoreMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.SessionIdManagerMBean"
},
{
  "name":"org.eclipse.jetty.session.jmx.SessionManagerMBean"
},
{
  "name":"org.eclipse.jetty.util.AsciiLowerCaseSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jetty.util.Attributes",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.ConcurrentPool",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.util.DecoratedObjectFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.Decorator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.Pool",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.util.TypeUtil",
  "methods":[{"name":"getClassLoaderLocation","parameterTypes":["java.lang.Class"] }, {"name":"getCodeSourceLocation","parameterTypes":["java.lang.Class"] }, {"name":"getModuleLocation","parameterTypes":["java.lang.Class"] }, {"name":"getSystemClassLoaderLocation","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.eclipse.jetty.util.VirtualThreads$Configurable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.AbstractLifeCycle",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.Container",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.Container$InheritedListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.Container$Listener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.ContainerLifeCycle",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.Destroyable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.Dumpable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.Dumpable$DumpableContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.DumpableCollection",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.DumpableMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.Graceful",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.LifeCycle",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.LifeCycle$Listener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.component.jmx.AbstractLifeCycleMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.Container$InheritedListenerMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.Container$ListenerMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.ContainerLifeCycleMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.ContainerMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.DestroyableMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.Dumpable$DumpableContainerMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.DumpableCollectionMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.DumpableMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.DumpableMapMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.GracefulMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.LifeCycle$ListenerMBean"
},
{
  "name":"org.eclipse.jetty.util.component.jmx.LifeCycleMBean"
},
{
  "name":"org.eclipse.jetty.util.compression.CompressionPool",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.compression.DeflaterPool",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.compression.InflaterPool",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.compression.jmx.CompressionPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.compression.jmx.DeflaterPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.compression.jmx.InflaterPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.jmx.AttributesMBean"
},
{
  "name":"org.eclipse.jetty.util.jmx.ConcurrentPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.jmx.DecoratedObjectFactoryMBean"
},
{
  "name":"org.eclipse.jetty.util.jmx.DecoratorMBean"
},
{
  "name":"org.eclipse.jetty.util.jmx.PoolMBean"
},
{
  "name":"org.eclipse.jetty.util.jmx.VirtualThreads$ConfigurableMBean"
},
{
  "name":"org.eclipse.jetty.util.resource.FileSystemPool",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.util.resource.jmx.FileSystemPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.ExecutionStrategy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.ExecutionStrategy$Producer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.Invocable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.QueuedThreadPool",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.ReservedThreadExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.ScheduledExecutorScheduler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.Scheduler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.ThreadIdPool",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.ThreadPool",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.ThreadPool$SizedThreadPool",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.ThreadPoolBudget",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.TryExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ExecutionStrategy$ProducerMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ExecutionStrategyMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.InvocableMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.QueuedThreadPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ReservedThreadExecutorMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ScheduledExecutorSchedulerMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.SchedulerMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ThreadIdPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ThreadPool$SizedThreadPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ThreadPoolBudgetMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.ThreadPoolMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.jmx.TryExecutorMBean"
},
{
  "name":"org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.util.thread.strategy.jmx.AdaptiveExecutionStrategyMBean"
},
{
  "name":"org.eclipse.jetty.websocket.core.WebSocketComponents",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.websocket.core.WebSocketExtensionRegistry",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.websocket.core.jmx.WebSocketComponentsMBean"
},
{
  "name":"org.eclipse.jetty.websocket.core.jmx.WebSocketExtensionRegistryMBean"
},
{
  "name":"org.eclipse.jetty.websocket.core.server.WebSocketMappings",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.websocket.core.server.WebSocketMappings$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.websocket.core.server.WebSocketServerComponents",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.websocket.core.server.WebSocketServerComponents$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.jetty.websocket.core.server.jmx.WebSocketMappings$1MBean"
},
{
  "name":"org.eclipse.jetty.websocket.core.server.jmx.WebSocketMappingsMBean"
},
{
  "name":"org.eclipse.jetty.websocket.core.server.jmx.WebSocketServerComponents$1MBean"
},
{
  "name":"org.eclipse.jetty.websocket.core.server.jmx.WebSocketServerComponentsMBean"
},
{
  "name":"org.glassfish.hk2.api.DynamicConfiguration",
  "queryAllPublicMethods":true,
  "methods":[{"name":"addActiveDescriptor","parameterTypes":["java.lang.Class"] }, {"name":"addActiveDescriptor","parameterTypes":["org.glassfish.hk2.api.ActiveDescriptor"] }, {"name":"addActiveDescriptor","parameterTypes":["org.glassfish.hk2.api.ActiveDescriptor","boolean"] }, {"name":"addActiveFactoryDescriptor","parameterTypes":["java.lang.Class"] }, {"name":"addIdempotentFilter","parameterTypes":["org.glassfish.hk2.api.Filter[]"] }, {"name":"addUnbindFilter","parameterTypes":["org.glassfish.hk2.api.Filter"] }, {"name":"bind","parameterTypes":["java.lang.Class"] }, {"name":"bind","parameterTypes":["java.lang.Object"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.Descriptor"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.Descriptor","boolean"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.DynamicConfiguration"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.FactoryDescriptors"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.FactoryDescriptors","boolean"] }, {"name":"bindAsContract","parameterTypes":["java.lang.Class"] }, {"name":"bindAsContract","parameterTypes":["java.lang.reflect.Type"] }, {"name":"bindAsContract","parameterTypes":["org.glassfish.hk2.api.TypeLiteral"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["org.glassfish.hk2.api.Factory"] }, {"name":"commit","parameterTypes":[] }, {"name":"install","parameterTypes":["org.glassfish.hk2.utilities.Binder[]"] }, {"name":"registerTwoPhaseResources","parameterTypes":["org.glassfish.hk2.api.TwoPhaseResource[]"] }]
},
{
  "name":"org.glassfish.hk2.internal.PerThreadContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.hk2.utilities.Binder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"addActiveDescriptor","parameterTypes":["java.lang.Class"] }, {"name":"addActiveDescriptor","parameterTypes":["org.glassfish.hk2.api.ActiveDescriptor"] }, {"name":"addActiveDescriptor","parameterTypes":["org.glassfish.hk2.api.ActiveDescriptor","boolean"] }, {"name":"addActiveFactoryDescriptor","parameterTypes":["java.lang.Class"] }, {"name":"addIdempotentFilter","parameterTypes":["org.glassfish.hk2.api.Filter[]"] }, {"name":"addUnbindFilter","parameterTypes":["org.glassfish.hk2.api.Filter"] }, {"name":"bind","parameterTypes":["java.lang.Class"] }, {"name":"bind","parameterTypes":["java.lang.Object"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.Descriptor"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.Descriptor","boolean"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.DynamicConfiguration"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.FactoryDescriptors"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.FactoryDescriptors","boolean"] }, {"name":"bindAsContract","parameterTypes":["java.lang.Class"] }, {"name":"bindAsContract","parameterTypes":["java.lang.reflect.Type"] }, {"name":"bindAsContract","parameterTypes":["org.glassfish.hk2.api.TypeLiteral"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["org.glassfish.hk2.api.Factory"] }, {"name":"commit","parameterTypes":[] }, {"name":"install","parameterTypes":["org.glassfish.hk2.utilities.Binder[]"] }, {"name":"registerTwoPhaseResources","parameterTypes":["org.glassfish.hk2.api.TwoPhaseResource[]"] }]
},
{
  "name":"org.glassfish.hk2.utilities.binding.AbstractBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addActiveDescriptor","parameterTypes":["java.lang.Class"] }, {"name":"addActiveDescriptor","parameterTypes":["org.glassfish.hk2.api.ActiveDescriptor"] }, {"name":"addActiveDescriptor","parameterTypes":["org.glassfish.hk2.api.ActiveDescriptor","boolean"] }, {"name":"addActiveFactoryDescriptor","parameterTypes":["java.lang.Class"] }, {"name":"addIdempotentFilter","parameterTypes":["org.glassfish.hk2.api.Filter[]"] }, {"name":"addUnbindFilter","parameterTypes":["org.glassfish.hk2.api.Filter"] }, {"name":"bind","parameterTypes":["java.lang.Class"] }, {"name":"bind","parameterTypes":["java.lang.Object"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.Descriptor"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.Descriptor","boolean"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.DynamicConfiguration"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.FactoryDescriptors"] }, {"name":"bind","parameterTypes":["org.glassfish.hk2.api.FactoryDescriptors","boolean"] }, {"name":"bindAsContract","parameterTypes":["java.lang.Class"] }, {"name":"bindAsContract","parameterTypes":["java.lang.reflect.Type"] }, {"name":"bindAsContract","parameterTypes":["org.glassfish.hk2.api.TypeLiteral"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["org.glassfish.hk2.api.Factory"] }, {"name":"commit","parameterTypes":[] }, {"name":"complete","parameterTypes":[] }, {"name":"configuration","parameterTypes":[] }, {"name":"configure","parameterTypes":[] }, {"name":"getDefaultBinderLoader","parameterTypes":[] }, {"name":"install","parameterTypes":["org.glassfish.hk2.utilities.Binder[]"] }, {"name":"registerTwoPhaseResources","parameterTypes":["org.glassfish.hk2.api.TwoPhaseResource[]"] }, {"name":"resetBuilder","parameterTypes":["org.glassfish.hk2.utilities.binding.AbstractBindingBuilder"] }, {"name":"setLoader","parameterTypes":["org.glassfish.hk2.api.Descriptor"] }]
},
{
  "name":"org.glassfish.jersey.ext.cdi1x.internal.CdiUtil"
},
{
  "name":"org.glassfish.jersey.inject.hk2.ContextInjectionResolverImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.Hk2InjectionManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.Hk2Registrables",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.Hk2RequestScope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.InstanceSupplierFactoryBridge",
  "methods":[{"name":"provide","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.JerseyErrorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.RequestContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.process.internal.RequestScope"] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.SupplierFactoryBridge",
  "methods":[{"name":"provide","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.internal.JaxrsProviders",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.inject.Provider","jakarta.inject.Provider","jakarta.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.AbstractBinder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bind","parameterTypes":["java.lang.Class"] }, {"name":"bind","parameterTypes":["java.lang.Object"] }, {"name":"bind","parameterTypes":["org.glassfish.jersey.internal.inject.Binding"] }, {"name":"bind","parameterTypes":["org.glassfish.jersey.internal.inject.InjectionResolver"] }, {"name":"bindAsContract","parameterTypes":["jakarta.ws.rs.core.GenericType"] }, {"name":"bindAsContract","parameterTypes":["java.lang.Class"] }, {"name":"bindAsContract","parameterTypes":["java.lang.reflect.Type"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["java.util.function.Supplier"] }, {"name":"configure","parameterTypes":[] }, {"name":"createManagedInstanceProvider","parameterTypes":["java.lang.Class"] }, {"name":"getBindings","parameterTypes":[] }, {"name":"install","parameterTypes":["org.glassfish.jersey.internal.inject.AbstractBinder[]"] }, {"name":"invokeConfigure","parameterTypes":[] }, {"name":"setInjectionManager","parameterTypes":["org.glassfish.jersey.internal.inject.InjectionManager"] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.Binder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"bind","parameterTypes":["java.lang.Class"] }, {"name":"bind","parameterTypes":["java.lang.Object"] }, {"name":"bind","parameterTypes":["org.glassfish.jersey.internal.inject.Binding"] }, {"name":"bind","parameterTypes":["org.glassfish.jersey.internal.inject.InjectionResolver"] }, {"name":"bindAsContract","parameterTypes":["jakarta.ws.rs.core.GenericType"] }, {"name":"bindAsContract","parameterTypes":["java.lang.Class"] }, {"name":"bindAsContract","parameterTypes":["java.lang.reflect.Type"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"bindFactory","parameterTypes":["java.util.function.Supplier"] }, {"name":"getBindings","parameterTypes":[] }, {"name":"install","parameterTypes":["org.glassfish.jersey.internal.inject.AbstractBinder[]"] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.Custom",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.internal.inject.ParamConverters$AggregatedProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.internal.inject.InjectionManager","jakarta.ws.rs.core.Configuration"] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.ReferencingFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.logging.LoggingInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"aroundWriteTo","parameterTypes":["jakarta.ws.rs.ext.WriterInterceptorContext"] }, {"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext"] }, {"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext","jakarta.ws.rs.container.ContainerResponseContext"] }, {"name":"getSortedHeaders","parameterTypes":["java.util.Set"] }, {"name":"getValuesAppender","parameterTypes":["java.lang.String","java.util.List"] }, {"name":"isReadable","parameterTypes":["jakarta.ws.rs.core.MediaType"] }, {"name":"log","parameterTypes":["java.lang.StringBuilder"] }, {"name":"logInboundEntity","parameterTypes":["java.lang.StringBuilder","java.io.InputStream","java.nio.charset.Charset"] }, {"name":"prefixId","parameterTypes":["java.lang.StringBuilder","long"] }, {"name":"printEntity","parameterTypes":["org.glassfish.jersey.logging.LoggingFeature$Verbosity","jakarta.ws.rs.core.MediaType"] }, {"name":"printPrefixedHeaders","parameterTypes":["java.lang.StringBuilder","long","java.lang.String","jakarta.ws.rs.core.MultivaluedMap"] }, {"name":"printRequestLine","parameterTypes":["java.lang.StringBuilder","java.lang.String","long","java.lang.String","java.net.URI"] }, {"name":"printResponseLine","parameterTypes":["java.lang.StringBuilder","java.lang.String","long","int"] }]
},
{
  "name":"org.glassfish.jersey.logging.MDSLoggingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"copyHeaders","parameterTypes":["jakarta.ws.rs.core.MultivaluedMap"] }, {"name":"doRequestFilter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext"] }, {"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext"] }, {"name":"filter","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext","jakarta.ws.rs.container.ContainerResponseContext"] }, {"name":"prefixId","parameterTypes":["java.lang.StringBuilder","long"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.AbstractFormProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.message.internal.AbstractMessageReaderWriterProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.message.internal.BasicTypesMessageProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.ByteArrayProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.DataSourceProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.EnumMessageProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FileProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FormMultivaluedMapProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FormProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.InputStreamProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.PathProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.ReaderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.RenderedImageProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$DomSourceReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$SaxSourceReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$SourceWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.inject.Provider","jakarta.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$StreamSourceReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.StreamingOutputProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.StringMessageProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.process.Inflector",
  "methods":[{"name":"apply","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.glassfish.jersey.process.internal.RequestScope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.BackgroundScheduler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ChunkedResponseWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.DefaultExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.ManagedAsyncExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ServerExecutorProvidersConfigurator$DefaultBackgroundSchedulerProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ServerExecutorProvidersConfigurator$DefaultManagedAsyncExecutorProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.filter.internal.ServerFiltersAutoDiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.inject.FormParamValueParamProvider$MultipartFormParamValueProvider$FormParamHolder",
  "allDeclaredFields":true
},
{
  "name":"org.glassfish.jersey.server.internal.monitoring.MonitoringAutodiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.monitoring.MonitoringContainerListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$AsyncContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$CloseableServiceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$ContainerRequestFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.server.internal.process.RequestProcessingContextReference"] }]
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$UriRoutingContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.server.internal.process.RequestProcessingContextReference"] }]
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingContextReference",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.process.SecurityContextInjectee",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.ws.rs.container.ContainerRequestContext"] }]
},
{
  "name":"org.glassfish.jersey.server.model.Parameter$ServerParameterService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.monitoring.ApplicationEventListener",
  "methods":[{"name":"onEvent","parameterTypes":["org.glassfish.jersey.server.monitoring.ApplicationEvent"] }, {"name":"onRequest","parameterTypes":["org.glassfish.jersey.server.monitoring.RequestEvent"] }]
},
{
  "name":"org.glassfish.jersey.server.validation.ValidationFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.InjectingConstraintValidatorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidateOnExecutionTraversableResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationAutoDiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationBinder$ConfiguredValidatorProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationBinder$DefaultConfigurationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationBinder$DefaultValidatorFactoryProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationBinder$DefaultValidatorProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.validation.internal.ValidationExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.wadl.WadlFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configure","parameterTypes":["jakarta.ws.rs.core.FeatureContext"] }]
},
{
  "name":"org.glassfish.jersey.server.wadl.internal.WadlAutoDiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.wadl.processor.OptionsMethodProcessor$GenericOptionsInflector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jersey.server.wadl.processor.OptionsMethodProcessor$PlainTextOptionsInflector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jersey.servlet.WebComponent$HttpServletRequestReferencingFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.jersey.servlet.WebComponent$HttpServletResponseReferencingFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.jersey.servlet.WebComponent$WebComponentBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.servlet.async.AsyncContextDelegateProviderImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.servlet.init.FilterUrlMappingsProviderImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.spi.AbstractThreadPoolProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.spi.ScheduledThreadPoolExecutorProvider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"preDestroy","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.spi.ThreadPoolExecutorProvider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"preDestroy","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_en"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
},
{
  "name":"org.jboss.logmanager.LogManager"
},
{
  "name":"org.joda.time.ReadableInstant"
},
{
  "name":"org.jvnet.hk2.internal.DynamicConfigurationServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.hk2.api.ServiceLocator"] }]
},
{
  "name":"org.jvnet.hk2.internal.ServiceLocatorRuntimeImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.hk2.api.ServiceLocator"] }]
},
{
  "name":"org.osgi.framework.BundleEvent"
},
{
  "name":"org.osgi.framework.BundleReference"
},
{
  "name":"org.osgi.framework.FrameworkUtil"
},
{
  "name":"org.robolectric.Robolectric"
},
{
  "name":"scala.Enumeration",
  "allDeclaredFields":true
},
{
  "name":"scala.collection.concurrent.CNodeBase",
  "fields":[{"name":"csize"}]
},
{
  "name":"scala.collection.concurrent.INodeBase",
  "fields":[{"name":"mainnode"}]
},
{
  "name":"scala.collection.concurrent.MainNode",
  "fields":[{"name":"prev"}]
},
{
  "name":"scala.collection.concurrent.TrieMap",
  "fields":[{"name":"root"}]
},
{
  "name":"scala.reflect.ScalaSignature",
  "queryAllPublicMethods":true
},
{
  "name":"short",
  "queryAllDeclaredMethods":true
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.Signal",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"getName","parameterTypes":[] }, {"name":"handle","parameterTypes":["sun.misc.Signal","sun.misc.SignalHandler"] }]
},
{
  "name":"sun.misc.SignalHandler",
  "methods":[{"name":"handle","parameterTypes":["sun.misc.Signal"] }]
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, {"name":"copyMemory","parameterTypes":["long","long","long"] }, {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, {"name":"getByte","parameterTypes":["long"] }, {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, {"name":"getInt","parameterTypes":["long"] }, {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, {"name":"getLong","parameterTypes":["long"] }, {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, {"name":"putByte","parameterTypes":["long","byte"] }, {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, {"name":"putInt","parameterTypes":["long","int"] }, {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, {"name":"putLong","parameterTypes":["long","long"] }, {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"storeFence","parameterTypes":[] }]
},
{
  "name":"sun.nio.ch.SelChImpl",
  "queryAllDeclaredMethods":true
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
},
{
  "name":"sun.nio.ch.ServerSocketChannelImpl",
  "queryAllDeclaredMethods":true
},
{
  "name":"sun.nio.ch.jmx.SelChImplMBean"
},
{
  "name":"sun.nio.ch.jmx.ServerSocketChannelImplMBean"
},
{
  "name":"sun.rmi.registry.RegistryImpl_Skel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.rmi.registry.RegistryImpl_Stub",
  "methods":[{"name":"<init>","parameterTypes":["java.rmi.server.RemoteRef"] }]
},
{
  "name":"sun.rmi.transport.DGCImpl_Skel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.rmi.transport.DGCImpl_Stub",
  "methods":[{"name":"<init>","parameterTypes":["java.rmi.server.RemoteRef"] }]
},
{
  "name":"sun.security.krb5.PrincipalName",
  "fields":[{"name":"nameStrings"}]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSAKeyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSAParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]
